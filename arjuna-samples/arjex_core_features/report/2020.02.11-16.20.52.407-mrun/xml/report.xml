<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite errors="0" failures="1" hostname="Rahuls-MacBook-Pro.local" name="pytest" skipped="0" tests="2" time="3.110" timestamp="2020-02-11T16:20:52.654893"><testcase classname="tests.modules.test_01_launch_chrome" name="test_launch_chrome[my0]" time="2.898"><failure message="AssertionError: &apos;Google1&apos; != &apos;Google&apos;
- Google1
?       -
+ Google">my = &lt;arjuna.engine.test.My object at 0x10b52c550&gt;
request = &lt;FixtureRequest for &lt;Function test_launch_chrome[my0]&gt;&gt;

    @test
    def test_launch_chrome(my, request):
        google = WebApp(base_url=&quot;https://google.com&quot;)
        google.launch()
&gt;       my.asserter.assertEqual(&quot;Google1&quot;, google.ui.main_window.title)

tests/modules/test_01_launch_chrome.py:27: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/unittest/case.py:829: in assertEqual
    assertion_func(first, second, msg=msg)
/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/unittest/case.py:1203: in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;unittest.case.TestCase testMethod=__init__&gt;
msg = &quot;&apos;Google1&apos; != &apos;Google&apos;\n- Google1\n?       -\n+ Google\n&quot;

    def fail(self, msg=None):
        &quot;&quot;&quot;Fail immediately, with the given message.&quot;&quot;&quot;
&gt;       raise self.failureException(msg)
E       AssertionError: &apos;Google1&apos; != &apos;Google&apos;
E       - Google1
E       ?       -
E       + Google

/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/unittest/case.py:670: AssertionError</failure></testcase><testcase classname="tests.modules.test_01_launch_chrome" name="test" time="0.000"></testcase></testsuite></testsuites>