<?xml version= "1.0"?>
<project name="autocognite" default="sikulilibext_final" basedir=".">
	<description>
simple example build file
</description>
	<!-- set global properties for this build -->

	<!-- ======================================================================================== -->
	<!-- ===================================== GLOBAL PROPERTIES =================================================== -->
	<!-- ===================================== Common =================================================== -->
	<!-- ======================================================================================== -->

	<taskdef resource="proguard/ant/task.properties" classpath="/Users/rahulverma/Documents/coding_workbench/tools/proguard5.2.1/lib/proguard.jar" />
	<property name="3rd_party_jars" location="/Users/rahulverma/Documents/Dropbox/_jars">
	</property>

	<property name="autocognite.build_version" value="3.0a1" />

	<property name="autocognite.dir" value="/Users/rahulverma/Documents/_autocognite" />
	<property name="all.sources.dir" location="/Users/rahulverma/Documents/coding_workbench/eclipse_java_ws_rep_clone" />
	<property name="all.dist.dir" value="${autocognite.dir}/all_dists" />
	<property name="current.dist.dir" value="${autocognite.dir}/current_dist" />
	<property name="current.build.dir" location="${autocognite.dir}/current_build" />

	<property name="current.dist.public.dir" location="${current.dist.dir}/public/AutoCognite-${autocognite.build_version}" />
	<property name="current.dist.private.dir" location="${current.dist.dir}/private/AutoCognite-${autocognite.build_version}" />
	<property name="current.dist.public.zips.dir" location="${current.dist.public.dir}/zips" />
	<property name="current.dist.public.zips.dir.components" location="${current.dist.public.zips.dir}/components" />
	<property name="current.dist.public.zips.dir.bundles" location="${current.dist.public.zips.dir}/bundles" />
	<property name="current.dist.public.zips.dir" location="${current.dist.public.dir}/zips" />
	<property name="current.dist.public.sources.dir" location="${current.dist.public.dir}/sources" />
	<property name="current.dist.private.nonzipped.dir" location="${current.dist.private.dir}/nonzipped" />
	<property name="current.dist.private.jars.dir" value="${current.dist.private.dir}/jars" />
	<property name="current.dist.private.sources.dir" value="${current.dist.private.dir}/sources" />

	<!-- ======================================================================================== -->
	<!-- ===================================== GLOBAL PROPERTIES =================================================== -->
	<!-- ===================================== AC-Batteries =================================================== -->
	<!-- ======================================================================================== -->

	<property name="batteries.build_version" value="1.0" />
	<property name="batteries.build_type" value="a" />
	<property name="batteries.release_num" value="1" />
	<property name="batteries.proj.name" value="AC-Batteries" />
	<property name="batteries.name" value="ac-batteries" />
	<property name="batteries.github.rep.name" value="unitee" />

	<property name="proj.batteries.dir" value="${all.sources.dir}/${batteries.github.rep.name}/${batteries.proj.name}" />
	<property name="src.batteries.dir" location="${proj.batteries.dir}/src" />
	<property name="batteries.jar.file.name" value="${batteries.name}-${batteries.build_version}${batteries.build_type}${batteries.release_num}.jar" />
	<property name="ant.batteries.root.dir" value="${current.build.dir}/${batteries.proj.name}" />
	<property name="ant.batteries.build.dir" location="${ant.batteries.root.dir}/build" />
	<property name="ant.batteries.temp.dir" location="${ant.batteries.root.dir}/temp" />
	<property name="ant.batteries.obf.dir" location="${ant.batteries.root.dir}/obf" />

	<property name="ant.batteries.temp.jar.file" location="${ant.batteries.temp.dir}/${batteries.jar.file.name}" />
	<property name="ant.batteries.obf.jar.file" location="${ant.batteries.obf.dir}/${batteries.jar.file.name}" />
	<property name="batteries.dist.structure.dir" location="${proj.batteries.dir}/dist-structure" />
	<property name="private.batteries.dist.nonzipped.dir" value="${current.dist.private.nonzipped.dir}/${batteries.name}-dist" />
	<property name="private.batteries.dist.nonzipped.jar.dir" value="${private.batteries.dist.nonzipped.dir}/${batteries.name}/lib" />
	<property name="private.batteries.dist.nonzipped.jar.file" value="${private.batteries.dist.nonzipped.jar.dir}/${batteries.jar.file.name}" />

	<!-- ======================================================================================== -->
	<!-- ===================================== GLOBAL PROPERTIES =================================================== -->
	<!-- ===================================== Configurator =================================================== -->
	<!-- ======================================================================================== -->

	<property name="configurator.build_version" value="1.0" />
	<property name="configurator.build_type" value="a" />
	<property name="configurator.release_num" value="1" />
	<property name="configurator.proj.name" value="AC-Configurator" />
	<property name="configurator.name" value="ac-configurator" />
	<property name="configurator.github.rep.name" value="unitee" />

	<property name="proj.configurator.dir" value="${all.sources.dir}/${configurator.github.rep.name}/${configurator.proj.name}" />
	<property name="src.configurator.dir" location="${proj.configurator.dir}/src" />
	<property name="configurator.jar.file.name" value="${configurator.name}-${configurator.build_version}${configurator.build_type}${configurator.release_num}.jar" />
	<property name="ant.configurator.root.dir" value="${current.build.dir}/${configurator.proj.name}" />
	<property name="ant.configurator.build.dir" location="${ant.configurator.root.dir}/build" />
	<property name="ant.configurator.temp.dir" location="${ant.configurator.root.dir}/temp" />
	<property name="ant.configurator.obf.dir" location="${ant.configurator.root.dir}/obf" />

	<property name="ant.configurator.temp.jar.file" location="${ant.configurator.temp.dir}/${configurator.jar.file.name}" />
	<property name="ant.configurator.obf.jar.file" location="${ant.configurator.obf.dir}/${configurator.jar.file.name}" />
	<property name="configurator.dist.structure.dir" location="${proj.configurator.dir}/dist-structure" />
	<property name="final.configurator.dist.dir" value="${current.dist.private.nonzipped.dir}/${configurator.name}-dist" />
	<property name="private.configurator.dist.nonzipped.dir" value="${current.dist.private.nonzipped.dir}/${configurator.name}-dist" />
	<property name="private.configurator.dist.nonzipped.jar.dir" value="${private.configurator.dist.nonzipped.dir}/${configurator.name}/lib" />
	<property name="private.configurator.dist.nonzipped.jar.file" value="${private.configurator.dist.nonzipped.jar.dir}/${configurator.jar.file.name}" />


	<!-- ======================================================================================== -->
	<!-- ===================================== GLOBAL PROPERTIES =================================================== -->
	<!-- ===================================== Data Broker =================================================== -->
	<!-- ======================================================================================== -->

	<property name="databroker.build_version" value="1.0" />
	<property name="databroker.build_type" value="a" />
	<property name="databroker.release_num" value="1" />
	<property name="databroker.proj.name" value="AC-DataBroker" />
	<property name="databroker.name" value="ac-databroker" />
	<property name="databroker.github.rep.name" value="unitee" />

	<property name="proj.databroker.dir" value="${all.sources.dir}/${databroker.github.rep.name}/${databroker.proj.name}" />
	<property name="src.databroker.dir" location="${proj.databroker.dir}/src" />
	<property name="databroker.jar.file.name" value="${databroker.name}-${databroker.build_version}${databroker.build_type}${databroker.release_num}.jar" />
	<property name="ant.databroker.root.dir" value="${current.build.dir}/${databroker.proj.name}" />
	<property name="ant.databroker.build.dir" location="${ant.databroker.root.dir}/build" />
	<property name="ant.databroker.temp.dir" location="${ant.databroker.root.dir}/temp" />
	<property name="ant.databroker.obf.dir" location="${ant.databroker.root.dir}/obf" />

	<property name="ant.databroker.temp.jar.file" location="${ant.databroker.temp.dir}/${databroker.jar.file.name}" />
	<property name="ant.databroker.obf.jar.file" location="${ant.databroker.obf.dir}/${databroker.jar.file.name}" />
	<property name="databroker.dist.structure.dir" location="${proj.databroker.dir}/dist-structure" />
	<property name="final.databroker.dist.dir" value="${current.dist.private.nonzipped.dir}/${databroker.name}-dist" />
	<property name="private.databroker.dist.nonzipped.dir" value="${current.dist.private.nonzipped.dir}/${databroker.name}-dist" />
	<property name="private.databroker.dist.nonzipped.jar.dir" value="${private.databroker.dist.nonzipped.dir}/${databroker.name}/lib" />
	<property name="private.databroker.dist.nonzipped.jar.file" value="${private.databroker.dist.nonzipped.jar.dir}/${databroker.jar.file.name}" />

	<!-- ======================================================================================== -->
	<!-- ===================================== GLOBAL PROPERTIES =================================================== -->
	<!-- ===================================== Validator =================================================== -->
	<!-- ======================================================================================== -->


	<property name="validator.build_version" value="1.0" />
	<property name="validator.build_type" value="a" />
	<property name="validator.release_num" value="1" />
	<property name="validator.proj.name" value="AC-Validator" />
	<property name="validator.name" value="ac-validator" />
	<property name="validator.github.rep.name" value="unitee" />

	<property name="proj.validator.dir" value="${all.sources.dir}/${validator.github.rep.name}/${validator.proj.name}" />
	<property name="src.validator.dir" location="${proj.validator.dir}/src" />
	<property name="validator.jar.file.name" value="${validator.name}-${validator.build_version}${validator.build_type}${validator.release_num}.jar" />
	<property name="ant.validator.root.dir" value="${current.build.dir}/${validator.proj.name}" />
	<property name="ant.validator.build.dir" location="${ant.validator.root.dir}/build" />
	<property name="ant.validator.temp.dir" location="${ant.validator.root.dir}/temp" />
	<property name="ant.validator.obf.dir" location="${ant.validator.root.dir}/obf" />

	<property name="ant.validator.temp.jar.file" location="${ant.validator.temp.dir}/${validator.jar.file.name}" />
	<property name="ant.validator.obf.jar.file" location="${ant.validator.obf.dir}/${validator.jar.file.name}" />
	<property name="validator.dist.structure.dir" location="${proj.validator.dir}/dist-structure" />
	<property name="final.validator.dist.dir" value="${current.dist.private.nonzipped.dir}/${validator.name}-dist" />
	<property name="private.validator.dist.nonzipped.dir" value="${current.dist.private.nonzipped.dir}/${validator.name}-dist" />
	<property name="private.validator.dist.nonzipped.jar.dir" value="${private.validator.dist.nonzipped.dir}/${validator.name}/lib" />
	<property name="private.validator.dist.nonzipped.jar.file" value="${private.validator.dist.nonzipped.jar.dir}/${validator.jar.file.name}" />


	<!-- ======================================================================================== -->
	<!-- ===================================== GLOBAL PROPERTIES =================================================== -->
	<!-- ===================================== Test Commons =================================================== -->
	<!-- ======================================================================================== -->

	<property name="testcommons.build_version" value="1.0" />
	<property name="testcommons.build_type" value="a" />
	<property name="testcommons.release_num" value="1" />
	<property name="testcommons.proj.name" value="AC-TestCommons" />
	<property name="testcommons.name" value="ac-testcommons" />
	<property name="testcommons.github.rep.name" value="autocognite-testcommons" />

	<property name="proj.testcommons.dir" value="${all.sources.dir}/${testcommons.github.rep.name}/${testcommons.proj.name}" />
	<property name="src.testcommons.dir" location="${proj.testcommons.dir}/src" />
	<property name="testcommons.jar.file.name" value="${testcommons.name}-${testcommons.build_version}${testcommons.build_type}${testcommons.release_num}.jar" />
	<property name="ant.testcommons.root.dir" value="${current.build.dir}/${testcommons.proj.name}" />
	<property name="ant.testcommons.build.dir" location="${ant.testcommons.root.dir}/build" />
	<property name="ant.testcommons.temp.dir" location="${ant.testcommons.root.dir}/temp" />
	<property name="ant.testcommons.obf.dir" location="${ant.testcommons.root.dir}/obf" />
	<property name="ant.testcommons.temp.jar.file" location="${ant.testcommons.temp.dir}/${testcommons.jar.file.name}" />
	<property name="ant.testcommons.obf.jar.file" location="${ant.testcommons.obf.dir}/${testcommons.jar.file.name}" />
	<property name="testcommons.dist.structure.dir" location="${proj.testcommons.dir}/dist-structure" />
	<property name="final.testcommons.dist.dir" value="${current.dist.private.nonzipped.dir}/${testcommons.name}-dist" />
	<property name="private.testcommons.dist.nonzipped.dir" value="${current.dist.private.nonzipped.dir}/${testcommons.name}-dist" />
	<property name="private.testcommons.dist.nonzipped.jar.dir" value="${private.testcommons.dist.nonzipped.dir}/${testcommons.name}/lib" />
	<property name="private.testcommons.dist.nonzipped.jar.file" value="${private.testcommons.dist.nonzipped.jar.dir}/${testcommons.jar.file.name}" />

	<!-- ======================================================================================== -->
	<!-- ===================================== GLOBAL PROPERTIES =================================================== -->
	<!-- ===================================== Test Styler =================================================== -->
	<!-- ======================================================================================== -->

	<property name="teststyler.build_version" value="1.0" />
	<property name="teststyler.build_type" value="a" />
	<property name="teststyler.release_num" value="1" />
	<property name="teststyler.proj.name" value="AC-TestStyler" />
	<property name="teststyler.name" value="ac-teststyler" />
	<property name="teststyler.github.rep.name" value="unitee" />

	<property name="proj.teststyler.dir" value="${all.sources.dir}/${teststyler.github.rep.name}/${teststyler.proj.name}" />
	<property name="src.teststyler.dir" location="${proj.teststyler.dir}/src" />
	<property name="teststyler.jar.file.name" value="${teststyler.name}-${teststyler.build_version}${teststyler.build_type}${teststyler.release_num}.jar" />
	<property name="ant.teststyler.root.dir" value="${current.build.dir}/${teststyler.proj.name}" />
	<property name="ant.teststyler.build.dir" location="${ant.teststyler.root.dir}/build" />
	<property name="ant.teststyler.temp.dir" location="${ant.teststyler.root.dir}/temp" />
	<property name="ant.teststyler.obf.dir" location="${ant.teststyler.root.dir}/obf" />

	<property name="ant.teststyler.temp.jar.file" location="${ant.teststyler.temp.dir}/${teststyler.jar.file.name}" />
	<property name="ant.teststyler.obf.jar.file" location="${ant.teststyler.obf.dir}/${teststyler.jar.file.name}" />
	<property name="teststyler.dist.structure.dir" location="${proj.teststyler.dir}/dist-structure" />
	<property name="final.teststyler.dist.dir" value="${current.dist.private.nonzipped.dir}/${teststyler.name}-dist" />
	<property name="private.teststyler.dist.nonzipped.dir" value="${current.dist.private.nonzipped.dir}/${teststyler.name}-dist" />
	<property name="private.teststyler.dist.nonzipped.jar.dir" value="${private.teststyler.dist.nonzipped.dir}/${teststyler.name}/lib" />
	<property name="private.teststyler.dist.nonzipped.jar.file" value="${private.teststyler.dist.nonzipped.jar.dir}/${teststyler.jar.file.name}" />

	<!-- ======================================================================================== -->
	<!-- ===================================== GLOBAL PROPERTIES =================================================== -->
	<!-- ===================================== Test Reporter =================================================== -->
	<!-- ======================================================================================== -->

	<property name="testreporter.build_version" value="1.0" />
	<property name="testreporter.build_type" value="a" />
	<property name="testreporter.release_num" value="1" />
	<property name="testreporter.proj.name" value="AC-TestReporter" />
	<property name="testreporter.name" value="ac-testreporter" />
	<property name="testreporter.github.rep.name" value="unitee" />

	<property name="proj.testreporter.dir" value="${all.sources.dir}/${testreporter.github.rep.name}/${testreporter.proj.name}" />
	<property name="src.testreporter.dir" location="${proj.testreporter.dir}/src" />
	<property name="testreporter.jar.file.name" value="${testreporter.name}-${testreporter.build_version}${testreporter.build_type}${testreporter.release_num}.jar" />
	<property name="ant.testreporter.root.dir" value="${current.build.dir}/${testreporter.proj.name}" />
	<property name="ant.testreporter.build.dir" location="${ant.testreporter.root.dir}/build" />
	<property name="ant.testreporter.temp.dir" location="${ant.testreporter.root.dir}/temp" />
	<property name="ant.testreporter.obf.dir" location="${ant.testreporter.root.dir}/obf" />

	<property name="ant.testreporter.temp.jar.file" location="${ant.testreporter.temp.dir}/${testreporter.jar.file.name}" />
	<property name="ant.testreporter.obf.jar.file" location="${ant.testreporter.obf.dir}/${testreporter.jar.file.name}" />
	<property name="testreporter.dist.structure.dir" location="${proj.testreporter.dir}/dist-structure" />
	<property name="final.testreporter.dist.dir" value="${current.dist.private.nonzipped.dir}/${testreporter.name}-dist" />
	<property name="private.testreporter.dist.nonzipped.dir" value="${current.dist.private.nonzipped.dir}/${testreporter.name}-dist" />
	<property name="private.testreporter.dist.nonzipped.jar.dir" value="${private.testreporter.dist.nonzipped.dir}/${testreporter.name}/lib" />
	<property name="private.testreporter.dist.nonzipped.jar.file" value="${private.testreporter.dist.nonzipped.jar.dir}/${testreporter.jar.file.name}" />
	<!-- ======================================================================================== -->
	<!-- ===================================== GLOBAL PROPERTIES =================================================== -->
	<!-- ===================================== Test Runner =================================================== -->
	<!-- ======================================================================================== -->

	<property name="testrunner.build_version" value="1.0" />
	<property name="testrunner.build_type" value="a" />
	<property name="testrunner.release_num" value="1" />
	<property name="testrunner.proj.name" value="AC-TestRunner" />
	<property name="testrunner.name" value="ac-testrunner" />
	<property name="testrunner.github.rep.name" value="unitee" />

	<property name="proj.testrunner.dir" value="${all.sources.dir}/${testrunner.github.rep.name}/${testrunner.proj.name}" />
	<property name="src.testrunner.dir" location="${proj.testrunner.dir}/src" />
	<property name="testrunner.jar.file.name" value="${testrunner.name}-${testrunner.build_version}${testrunner.build_type}${testrunner.release_num}.jar" />
	<property name="ant.testrunner.root.dir" value="${current.build.dir}/${testrunner.proj.name}" />
	<property name="ant.testrunner.build.dir" location="${ant.testrunner.root.dir}/build" />
	<property name="ant.testrunner.temp.dir" location="${ant.testrunner.root.dir}/temp" />
	<property name="ant.testrunner.obf.dir" location="${ant.testrunner.root.dir}/obf" />

	<property name="ant.testrunner.temp.jar.file" location="${ant.testrunner.temp.dir}/${testrunner.jar.file.name}" />
	<property name="ant.testrunner.obf.jar.file" location="${ant.testrunner.obf.dir}/${testrunner.jar.file.name}" />
	<property name="testrunner.dist.structure.dir" location="${proj.testrunner.dir}/dist-structure" />
	<property name="final.testrunner.dist.dir" value="${current.dist.private.nonzipped.dir}/${testrunner.name}-dist" />
	<property name="private.testrunner.dist.nonzipped.dir" value="${current.dist.private.nonzipped.dir}/${testrunner.name}-dist" />
	<property name="private.testrunner.dist.nonzipped.jar.dir" value="${private.testrunner.dist.nonzipped.dir}/${testrunner.name}/lib" />
	<property name="private.testrunner.dist.nonzipped.jar.file" value="${private.testrunner.dist.nonzipped.jar.dir}/${testrunner.jar.file.name}" />
	<!-- ======================================================================================== -->
	<!-- ===================================== GLOBAL PROPERTIES =================================================== -->
	<!-- ===================================== UiAutomator API =================================================== -->
	<!-- ======================================================================================== -->

	<property name="uiautomatorapi.build_version" value="1.0" />
	<property name="uiautomatorapi.build_type" value="a" />
	<property name="uiautomatorapi.release_num" value="1" />
	<property name="uiautomatorapi.proj.name" value="AC-UiAutomator-API" />
	<property name="uiautomatorapi.name" value="ac-uiautomator-api" />
	<property name="uiautomatorapi.github.rep.name" value="autocognite-uiautomator" />

	<property name="proj.uiautomatorapi.dir" value="${all.sources.dir}/${uiautomatorapi.github.rep.name}/${uiautomatorapi.proj.name}" />
	<property name="src.uiautomatorapi.dir" location="${proj.uiautomatorapi.dir}/src" />
	<property name="uiautomatorapi.jar.file.name" value="${uiautomatorapi.name}-${uiautomatorapi.build_version}${uiautomatorapi.build_type}${uiautomatorapi.release_num}.jar" />
	<property name="ant.uiautomatorapi.root.dir" value="${current.build.dir}/${uiautomatorapi.proj.name}" />
	<property name="ant.uiautomatorapi.build.dir" location="${ant.uiautomatorapi.root.dir}/build" />
	<property name="ant.uiautomatorapi.temp.dir" location="${ant.uiautomatorapi.root.dir}/temp" />
	<property name="ant.uiautomatorapi.obf.dir" location="${ant.uiautomatorapi.root.dir}/obf" />

	<property name="ant.uiautomatorapi.temp.jar.file" location="${ant.uiautomatorapi.temp.dir}/${uiautomatorapi.jar.file.name}" />
	<property name="ant.uiautomatorapi.obf.jar.file" location="${ant.uiautomatorapi.obf.dir}/${uiautomatorapi.jar.file.name}" />
	<property name="uiautomatorapi.dist.structure.dir" location="${proj.uiautomatorapi.dir}/dist-structure" />
	<property name="final.uiautomatorapi.dist.dir" value="${current.dist.private.nonzipped.dir}/${uiautomatorapi.name}-dist" />
	<property name="private.uiautomatorapi.dist.nonzipped.dir" value="${current.dist.private.nonzipped.dir}/${uiautomatorapi.name}-dist" />
	<property name="private.uiautomatorapi.dist.nonzipped.jar.dir" value="${private.uiautomatorapi.dist.nonzipped.dir}/${uiautomatorapi.name}/lib" />
	<property name="private.uiautomatorapi.dist.nonzipped.jar.file" value="${private.uiautomatorapi.dist.nonzipped.jar.dir}/${uiautomatorapi.jar.file.name}" />

	<!-- ======================================================================================== -->
	<!-- ===================================== GLOBAL PROPERTIES =================================================== -->
	<!-- ===================================== UiAutomator =================================================== -->
	<!-- ======================================================================================== -->

	<property name="uiautomator.build_version" value="1.0" />
	<property name="uiautomator.build_type" value="a" />
	<property name="uiautomator.release_num" value="1" />
	<property name="uiautomator.proj.name" value="AC-UiAutomator" />
	<property name="uiautomator.name" value="ac-uiautomator" />
	<property name="uiautomator.github.rep.name" value="unitee" />

	<property name="proj.uiautomator.dir" value="${all.sources.dir}/${uiautomator.github.rep.name}/${uiautomator.proj.name}" />
	<property name="src.uiautomator.dir" location="${proj.uiautomator.dir}/src" />
	<property name="uiautomator.jar.file.name" value="${uiautomator.name}-${uiautomator.build_version}${uiautomator.build_type}${uiautomator.release_num}.jar" />
	<property name="ant.uiautomator.root.dir" value="${current.build.dir}/${uiautomator.proj.name}" />
	<property name="ant.uiautomator.build.dir" location="${ant.uiautomator.root.dir}/build" />
	<property name="ant.uiautomator.temp.dir" location="${ant.uiautomator.root.dir}/temp" />
	<property name="ant.uiautomator.obf.dir" location="${ant.uiautomator.root.dir}/obf" />

	<property name="ant.uiautomator.temp.jar.file" location="${ant.uiautomator.temp.dir}/${uiautomator.jar.file.name}" />
	<property name="ant.uiautomator.obf.jar.file" location="${ant.uiautomator.obf.dir}/${uiautomator.jar.file.name}" />
	<property name="uiautomator.dist.structure.dir" location="${proj.uiautomator.dir}/dist-structure" />


	<!-- ======================================================================================== -->
	<!-- ===================================== GLOBAL PROPERTIES =================================================== -->
	<!-- ===================================== UiAutomator-Lib-Ext =================================================== -->
	<!-- ======================================================================================== -->

	<property name="uiautomatorlibext.build_version" value="1.0" />
	<property name="uiautomatorlibext.build_type" value="a" />
	<property name="uiautomatorlibext.release_num" value="1" />
	<property name="uiautomatorlibext.proj.name" value="AC-UiAutomator-Lib-Ext" />
	<property name="uiautomatorlibext.name" value="ac-uiautomator-lib-ext" />
	<property name="uiautomatorlibext.github.rep.name" value="autocognite-uiautomator" />

	<property name="proj.uiautomatorlibext.dir" value="${all.sources.dir}/${uiautomatorlibext.github.rep.name}/${uiautomatorlibext.proj.name}" />
	<property name="src.uiautomatorlibext.dir" location="${proj.uiautomatorlibext.dir}/src" />
	<property name="uiautomatorlibext.jar.file.name" value="${uiautomatorlibext.name}-${uiautomatorlibext.build_version}${uiautomatorlibext.build_type}${uiautomatorlibext.release_num}.jar" />
	<property name="ant.uiautomatorlibext.root.dir" value="${current.build.dir}/${uiautomatorlibext.proj.name}" />
	<property name="ant.uiautomatorlibext.build.dir" location="${ant.uiautomatorlibext.root.dir}/build" />
	<property name="ant.uiautomatorlibext.temp.dir" location="${ant.uiautomatorlibext.root.dir}/temp" />
	<property name="ant.uiautomatorlibext.obf.dir" location="${ant.uiautomatorlibext.root.dir}/obf" />

	<property name="ant.uiautomatorlibext.temp.jar.file" location="${ant.uiautomatorlibext.temp.dir}/${uiautomatorlibext.jar.file.name}" />
	<property name="ant.uiautomatorlibext.obf.jar.file" location="${ant.uiautomatorlibext.obf.dir}/${uiautomatorlibext.jar.file.name}" />
	<property name="uiautomatorlibext.dist.structure.dir" location="${proj.uiautomatorlibext.dir}/dist-structure" />
	<property name="final.uiautomatorlibext.dist.dir" value="${current.dist.private.nonzipped.dir}/${uiautomatorlibext.name}-dist" />
	<property name="private.uiautomatorlibext.dist.nonzipped.dir" value="${current.dist.private.nonzipped.dir}/${uiautomatorlibext.name}-dist" />
	<property name="private.uiautomatorlibext.dist.nonzipped.jar.dir" value="${private.uiautomatorlibext.dist.nonzipped.dir}/${uiautomatorlibext.name}/lib" />
	<property name="private.uiautomatorlibext.dist.nonzipped.jar.file" value="${private.uiautomatorlibext.dist.nonzipped.jar.dir}/${uiautomatorlibext.jar.file.name}" />
	<!-- ======================================================================================== -->
	<!-- ===================================== GLOBAL PROPERTIES =================================================== -->
	<!-- ===================================== Appium Automator API =================================================== -->
	<!-- ======================================================================================== -->

	<property name="appiumapi.build_version" value="1.0" />
	<property name="appiumapi.build_type" value="a" />
	<property name="appiumapi.release_num" value="1" />
	<property name="appiumapi.proj.name" value="AC-Appium-Automator-API" />
	<property name="appiumapi.name" value="ac-appium-api" />
	<property name="appiumapi.github.rep.name" value="autocognite-appium" />

	<property name="proj.appiumapi.dir" value="${all.sources.dir}/${appiumapi.github.rep.name}/${appiumapi.proj.name}" />
	<property name="src.appiumapi.dir" location="${proj.appiumapi.dir}/src" />
	<property name="appiumapi.jar.file.name" value="${appiumapi.name}-${appiumapi.build_version}${appiumapi.build_type}${appiumapi.release_num}.jar" />
	<property name="ant.appiumapi.root.dir" value="${current.build.dir}/${appiumapi.proj.name}" />
	<property name="ant.appiumapi.build.dir" location="${ant.appiumapi.root.dir}/build" />
	<property name="ant.appiumapi.temp.dir" location="${ant.appiumapi.root.dir}/temp" />
	<property name="ant.appiumapi.obf.dir" location="${ant.appiumapi.root.dir}/obf" />

	<property name="ant.appiumapi.temp.jar.file" location="${ant.appiumapi.temp.dir}/${appiumapi.jar.file.name}" />
	<property name="ant.appiumapi.obf.jar.file" location="${ant.appiumapi.obf.dir}/${appiumapi.jar.file.name}" />
	<property name="appiumapi.dist.structure.dir" location="${proj.appiumapi.dir}/dist-structure" />
	<property name="final.appiumapi.dist.dir" value="${current.dist.private.nonzipped.dir}/${appiumapi.name}-dist" />
	<property name="private.appiumapi.dist.nonzipped.dir" value="${current.dist.private.nonzipped.dir}/${appiumapi.name}-dist" />
	<property name="private.appiumapi.dist.nonzipped.jar.dir" value="${private.appiumapi.dist.nonzipped.dir}/${appiumapi.name}/lib" />
	<property name="private.appiumapi.dist.nonzipped.jar.file" value="${private.appiumapi.dist.nonzipped.jar.dir}/${appiumapi.jar.file.name}" />

	<!-- ======================================================================================== -->
	<!-- ===================================== GLOBAL PROPERTIES =================================================== -->
	<!-- ===================================== Appium Automator =================================================== -->
	<!-- ======================================================================================== -->

	<property name="appium.build_version" value="1.0" />
	<property name="appium.build_type" value="a" />
	<property name="appium.release_num" value="1" />
	<property name="appium.proj.name" value="AC-Appium-Automator" />
	<property name="appium.name" value="ac-appium" />
	<property name="appium.github.rep.name" value="unitee" />

	<property name="proj.appium.dir" value="${all.sources.dir}/${appium.github.rep.name}/${appium.proj.name}" />
	<property name="src.appium.dir" location="${proj.appium.dir}/src" />
	<property name="appium.jar.file.name" value="${appium.name}-${appium.build_version}${appium.build_type}${appium.release_num}.jar" />
	<property name="ant.appium.root.dir" value="${current.build.dir}/${appium.proj.name}" />
	<property name="ant.appium.build.dir" location="${ant.appium.root.dir}/build" />
	<property name="ant.appium.temp.dir" location="${ant.appium.root.dir}/temp" />
	<property name="ant.appium.obf.dir" location="${ant.appium.root.dir}/obf" />

	<property name="ant.appium.temp.jar.file" location="${ant.appium.temp.dir}/${appium.jar.file.name}" />
	<property name="ant.appium.obf.jar.file" location="${ant.appium.obf.dir}/${appium.jar.file.name}" />
	<property name="appium.dist.structure.dir" location="${proj.appium.dir}/dist-structure" />
	<property name="final.appium.dist.dir" value="${current.dist.private.nonzipped.dir}/${appium.name}-dist" />
	<property name="private.appium.dist.nonzipped.dir" value="${current.dist.private.nonzipped.dir}/${appium.name}-dist" />
	<property name="private.appium.dist.nonzipped.jar.dir" value="${private.appium.dist.nonzipped.dir}/${appium.name}/lib" />
	<property name="private.appium.dist.nonzipped.jar.file" value="${private.appium.dist.nonzipped.jar.dir}/${appium.jar.file.name}" />

	<!-- ======================================================================================== -->
	<!-- ===================================== GLOBAL PROPERTIES =================================================== -->
	<!-- ===================================== Appium Automator Lib Ext =================================================== -->
	<!-- ======================================================================================== -->

	<property name="appiumlibext.build_version" value="1.0" />
	<property name="appiumlibext.build_type" value="a" />
	<property name="appiumlibext.release_num" value="1" />
	<property name="appiumlibext.proj.name" value="AC-Appium-Automator-Lib-Ext" />
	<property name="appiumlibext.name" value="ac-appium-lib-ext" />
	<property name="appiumlibext.github.rep.name" value="autocognite-appium" />

	<property name="proj.appiumlibext.dir" value="${all.sources.dir}/${appiumlibext.github.rep.name}/${appiumlibext.proj.name}" />
	<property name="src.appiumlibext.dir" location="${proj.appiumlibext.dir}/src" />
	<property name="appiumlibext.jar.file.name" value="${appiumlibext.name}-${appiumlibext.build_version}${appiumlibext.build_type}${appiumlibext.release_num}.jar" />
	<property name="ant.appiumlibext.root.dir" value="${current.build.dir}/${appiumlibext.proj.name}" />
	<property name="ant.appiumlibext.build.dir" location="${ant.appiumlibext.root.dir}/build" />
	<property name="ant.appiumlibext.temp.dir" location="${ant.appiumlibext.root.dir}/temp" />
	<property name="ant.appiumlibext.obf.dir" location="${ant.appiumlibext.root.dir}/obf" />

	<property name="ant.appiumlibext.temp.jar.file" location="${ant.appiumlibext.temp.dir}/${appiumlibext.jar.file.name}" />
	<property name="ant.appiumlibext.obf.jar.file" location="${ant.appiumlibext.obf.dir}/${appiumlibext.jar.file.name}" />
	<property name="appiumlibext.dist.structure.dir" location="${proj.appiumlibext.dir}/dist-structure" />
	<property name="final.appiumlibext.dist.dir" value="${current.dist.private.nonzipped.dir}/${appiumlibext.name}-dist" />
	<property name="private.appiumlibext.dist.nonzipped.dir" value="${current.dist.private.nonzipped.dir}/${appiumlibext.name}-dist" />
	<property name="private.appiumlibext.dist.nonzipped.jar.dir" value="${private.appiumlibext.dist.nonzipped.dir}/${appiumlibext.name}/lib" />
	<property name="private.appiumlibext.dist.nonzipped.jar.file" value="${private.appiumlibext.dist.nonzipped.jar.dir}/${appiumlibext.jar.file.name}" />

	<!-- ======================================================================================== -->
	<!-- ===================================== GLOBAL PROPERTIES =================================================== -->
	<!-- ===================================== SeleniumWD Automator API =================================================== -->
	<!-- ======================================================================================== -->

	<property name="seleniumapi.build_version" value="1.0" />
	<property name="seleniumapi.build_type" value="a" />
	<property name="seleniumapi.release_num" value="1" />
	<property name="seleniumapi.proj.name" value="AC-SeleniumWD-Automator-API" />
	<property name="seleniumapi.name" value="ac-seleniumwd-api" />
	<property name="seleniumapi.github.rep.name" value="autocognite-selenium" />

	<property name="proj.seleniumapi.dir" value="${all.sources.dir}/${seleniumapi.github.rep.name}/${seleniumapi.proj.name}" />
	<property name="src.seleniumapi.dir" location="${proj.seleniumapi.dir}/src" />
	<property name="seleniumapi.jar.file.name" value="${seleniumapi.name}-${seleniumapi.build_version}${seleniumapi.build_type}${seleniumapi.release_num}.jar" />
	<property name="ant.seleniumapi.root.dir" value="${current.build.dir}/${seleniumapi.proj.name}" />
	<property name="ant.seleniumapi.build.dir" location="${ant.seleniumapi.root.dir}/build" />
	<property name="ant.seleniumapi.temp.dir" location="${ant.seleniumapi.root.dir}/temp" />
	<property name="ant.seleniumapi.obf.dir" location="${ant.seleniumapi.root.dir}/obf" />

	<property name="ant.seleniumapi.temp.jar.file" location="${ant.seleniumapi.temp.dir}/${seleniumapi.jar.file.name}" />
	<property name="ant.seleniumapi.obf.jar.file" location="${ant.seleniumapi.obf.dir}/${seleniumapi.jar.file.name}" />
	<property name="seleniumapi.dist.structure.dir" location="${proj.seleniumapi.dir}/dist-structure" />
	<property name="final.seleniumapi.dist.dir" value="${current.dist.private.nonzipped.dir}/${seleniumapi.name}-dist" />
	<property name="private.seleniumapi.dist.nonzipped.dir" value="${current.dist.private.nonzipped.dir}/${seleniumapi.name}-dist" />
	<property name="private.seleniumapi.dist.nonzipped.jar.dir" value="${private.seleniumapi.dist.nonzipped.dir}/${seleniumapi.name}/lib" />
	<property name="private.seleniumapi.dist.nonzipped.jar.file" value="${private.seleniumapi.dist.nonzipped.jar.dir}/${seleniumapi.jar.file.name}" />
	<!-- ======================================================================================== -->
	<!-- ===================================== GLOBAL PROPERTIES =================================================== -->
	<!-- ===================================== selenium Automator =================================================== -->
	<!-- ======================================================================================== -->

	<property name="selenium.build_version" value="1.0" />
	<property name="selenium.build_type" value="a" />
	<property name="selenium.release_num" value="1" />
	<property name="selenium.proj.name" value="AC-SeleniumWD-Automator" />
	<property name="selenium.name" value="ac-seleniumwd" />
	<property name="selenium.github.rep.name" value="unitee" />

	<property name="proj.selenium.dir" value="${all.sources.dir}/${selenium.github.rep.name}/${selenium.proj.name}" />
	<property name="src.selenium.dir" location="${proj.selenium.dir}/src" />
	<property name="selenium.jar.file.name" value="${selenium.name}-${selenium.build_version}${selenium.build_type}${selenium.release_num}.jar" />
	<property name="ant.selenium.root.dir" value="${current.build.dir}/${selenium.proj.name}" />
	<property name="ant.selenium.build.dir" location="${ant.selenium.root.dir}/build" />
	<property name="ant.selenium.temp.dir" location="${ant.selenium.root.dir}/temp" />
	<property name="ant.selenium.obf.dir" location="${ant.selenium.root.dir}/obf" />

	<property name="ant.selenium.temp.jar.file" location="${ant.selenium.temp.dir}/${selenium.jar.file.name}" />
	<property name="ant.selenium.obf.jar.file" location="${ant.selenium.obf.dir}/${selenium.jar.file.name}" />
	<property name="selenium.dist.structure.dir" location="${proj.selenium.dir}/dist-structure" />
	<property name="final.selenium.dist.dir" value="${current.dist.private.nonzipped.dir}/${selenium.name}-dist" />
	<property name="private.selenium.dist.nonzipped.dir" value="${current.dist.private.nonzipped.dir}/${selenium.name}-dist" />
	<property name="private.selenium.dist.nonzipped.jar.dir" value="${private.selenium.dist.nonzipped.dir}/${selenium.name}/lib" />
	<property name="private.selenium.dist.nonzipped.jar.file" value="${private.selenium.dist.nonzipped.jar.dir}/${selenium.jar.file.name}" />

	<!-- ======================================================================================== -->
	<!-- ===================================== GLOBAL PROPERTIES =================================================== -->
	<!-- ===================================== selenium Automator Lib Ext =================================================== -->
	<!-- ======================================================================================== -->

	<property name="seleniumlibext.build_version" value="1.0" />
	<property name="seleniumlibext.build_type" value="a" />
	<property name="seleniumlibext.release_num" value="1" />
	<property name="seleniumlibext.proj.name" value="AC-SeleniumWD-Automator-Lib-Ext" />
	<property name="seleniumlibext.name" value="ac-seleniumwd-lib-ext" />
	<property name="seleniumlibext.github.rep.name" value="autocognite-selenium" />

	<property name="proj.seleniumlibext.dir" value="${all.sources.dir}/${seleniumlibext.github.rep.name}/${seleniumlibext.proj.name}" />
	<property name="src.seleniumlibext.dir" location="${proj.seleniumlibext.dir}/src" />
	<property name="seleniumlibext.jar.file.name" value="${seleniumlibext.name}-${seleniumlibext.build_version}${seleniumlibext.build_type}${seleniumlibext.release_num}.jar" />
	<property name="ant.seleniumlibext.root.dir" value="${current.build.dir}/${seleniumlibext.proj.name}" />
	<property name="ant.seleniumlibext.build.dir" location="${ant.seleniumlibext.root.dir}/build" />
	<property name="ant.seleniumlibext.temp.dir" location="${ant.seleniumlibext.root.dir}/temp" />
	<property name="ant.seleniumlibext.obf.dir" location="${ant.seleniumlibext.root.dir}/obf" />

	<property name="ant.seleniumlibext.temp.jar.file" location="${ant.seleniumlibext.temp.dir}/${seleniumlibext.jar.file.name}" />
	<property name="ant.seleniumlibext.obf.jar.file" location="${ant.seleniumlibext.obf.dir}/${seleniumlibext.jar.file.name}" />
	<property name="seleniumlibext.dist.structure.dir" location="${proj.seleniumlibext.dir}/dist-structure" />
	<property name="final.seleniumlibext.dist.dir" value="${current.dist.private.nonzipped.dir}/${seleniumlibext.name}-dist" />
	<property name="private.seleniumlibext.dist.nonzipped.dir" value="${current.dist.private.nonzipped.dir}/${seleniumlibext.name}-dist" />
	<property name="private.seleniumlibext.dist.nonzipped.jar.dir" value="${private.seleniumlibext.dist.nonzipped.dir}/${seleniumlibext.name}/lib" />
	<property name="private.seleniumlibext.dist.nonzipped.jar.file" value="${private.seleniumlibext.dist.nonzipped.jar.dir}/${seleniumlibext.jar.file.name}" />
	<!-- ======================================================================================== -->
	<!-- ===================================== GLOBAL PROPERTIES =================================================== -->
	<!-- ===================================== Sikuli Automator API =================================================== -->
	<!-- ======================================================================================== -->

	<property name="sikuliapi.build_version" value="1.0" />
	<property name="sikuliapi.build_type" value="a" />
	<property name="sikuliapi.release_num" value="1" />
	<property name="sikuliapi.proj.name" value="AC-Sikuli-Automator-API" />
	<property name="sikuliapi.name" value="ac-sikuli-api" />
	<property name="sikuliapi.github.rep.name" value="autocognite-sikuli" />

	<property name="proj.sikuliapi.dir" value="${all.sources.dir}/${sikuliapi.github.rep.name}/${sikuliapi.proj.name}" />
	<property name="src.sikuliapi.dir" location="${proj.sikuliapi.dir}/src" />
	<property name="sikuliapi.jar.file.name" value="${sikuliapi.name}-${sikuliapi.build_version}${sikuliapi.build_type}${sikuliapi.release_num}.jar" />
	<property name="ant.sikuliapi.root.dir" value="${current.build.dir}/${sikuliapi.proj.name}" />
	<property name="ant.sikuliapi.build.dir" location="${ant.sikuliapi.root.dir}/build" />
	<property name="ant.sikuliapi.temp.dir" location="${ant.sikuliapi.root.dir}/temp" />
	<property name="ant.sikuliapi.obf.dir" location="${ant.sikuliapi.root.dir}/obf" />

	<property name="ant.sikuliapi.temp.jar.file" location="${ant.sikuliapi.temp.dir}/${sikuliapi.jar.file.name}" />
	<property name="ant.sikuliapi.obf.jar.file" location="${ant.sikuliapi.obf.dir}/${sikuliapi.jar.file.name}" />
	<property name="sikuliapi.dist.structure.dir" location="${proj.sikuliapi.dir}/dist-structure" />
	<property name="final.sikuliapi.dist.dir" value="${current.dist.private.nonzipped.dir}/${sikuliapi.name}-dist" />
	<property name="private.sikuliapi.dist.nonzipped.dir" value="${current.dist.private.nonzipped.dir}/${sikuliapi.name}-dist" />
	<property name="private.sikuliapi.dist.nonzipped.jar.dir" value="${private.sikuliapi.dist.nonzipped.dir}/${sikuliapi.name}/lib" />
	<property name="private.sikuliapi.dist.nonzipped.jar.file" value="${private.sikuliapi.dist.nonzipped.jar.dir}/${sikuliapi.jar.file.name}" />
	<!-- ======================================================================================== -->
	<!-- ===================================== GLOBAL PROPERTIES =================================================== -->
	<!-- ===================================== Sikuli Automator =================================================== -->
	<!-- ======================================================================================== -->

	<property name="sikuli.build_version" value="1.0" />
	<property name="sikuli.build_type" value="a" />
	<property name="sikuli.release_num" value="1" />
	<property name="sikuli.proj.name" value="AC-Sikuli-Automator" />
	<property name="sikuli.name" value="ac-sikuli" />
	<property name="sikuli.github.rep.name" value="unitee" />

	<property name="proj.sikuli.dir" value="${all.sources.dir}/${sikuli.github.rep.name}/${sikuli.proj.name}" />
	<property name="src.sikuli.dir" location="${proj.sikuli.dir}/src" />
	<property name="sikuli.jar.file.name" value="${sikuli.name}-${sikuli.build_version}${sikuli.build_type}${sikuli.release_num}.jar" />
	<property name="ant.sikuli.root.dir" value="${current.build.dir}/${sikuli.proj.name}" />
	<property name="ant.sikuli.build.dir" location="${ant.sikuli.root.dir}/build" />
	<property name="ant.sikuli.temp.dir" location="${ant.sikuli.root.dir}/temp" />
	<property name="ant.sikuli.obf.dir" location="${ant.sikuli.root.dir}/obf" />

	<property name="ant.sikuli.temp.jar.file" location="${ant.sikuli.temp.dir}/${sikuli.jar.file.name}" />
	<property name="ant.sikuli.obf.jar.file" location="${ant.sikuli.obf.dir}/${sikuli.jar.file.name}" />
	<property name="sikuli.dist.structure.dir" location="${proj.sikuli.dir}/dist-structure" />
	<property name="final.sikuli.dist.dir" value="${current.dist.private.nonzipped.dir}/${sikuli.name}-dist" />
	<property name="private.sikuli.dist.nonzipped.dir" value="${current.dist.private.nonzipped.dir}/${sikuli.name}-dist" />
	<property name="private.sikuli.dist.nonzipped.jar.dir" value="${private.sikuli.dist.nonzipped.dir}/${sikuli.name}/lib" />
	<property name="private.sikuli.dist.nonzipped.jar.file" value="${private.sikuli.dist.nonzipped.jar.dir}/${sikuli.jar.file.name}" />

	<!-- ======================================================================================== -->
	<!-- ===================================== GLOBAL PROPERTIES =================================================== -->
	<!-- ===================================== Sikuli Automator Lib Ext =================================================== -->
	<!-- ======================================================================================== -->

	<property name="sikulilibext.build_version" value="1.0" />
	<property name="sikulilibext.build_type" value="a" />
	<property name="sikulilibext.release_num" value="1" />
	<property name="sikulilibext.proj.name" value="AC-Sikuli-Automator-Lib-Ext" />
	<property name="sikulilibext.name" value="ac-sikuli-lib-ext" />
	<property name="sikulilibext.github.rep.name" value="autocognite-sikuli" />

	<property name="proj.sikulilibext.dir" value="${all.sources.dir}/${sikulilibext.github.rep.name}/${sikulilibext.proj.name}" />
	<property name="src.sikulilibext.dir" location="${proj.sikulilibext.dir}/src" />
	<property name="sikulilibext.jar.file.name" value="${sikulilibext.name}-${sikulilibext.build_version}${sikulilibext.build_type}${sikulilibext.release_num}.jar" />
	<property name="ant.sikulilibext.root.dir" value="${current.build.dir}/${sikulilibext.proj.name}" />
	<property name="ant.sikulilibext.build.dir" location="${ant.sikulilibext.root.dir}/build" />
	<property name="ant.sikulilibext.temp.dir" location="${ant.sikulilibext.root.dir}/temp" />
	<property name="ant.sikulilibext.obf.dir" location="${ant.sikulilibext.root.dir}/obf" />

	<property name="ant.sikulilibext.temp.jar.file" location="${ant.sikulilibext.temp.dir}/${sikulilibext.jar.file.name}" />
	<property name="ant.sikulilibext.obf.jar.file" location="${ant.sikulilibext.obf.dir}/${sikulilibext.jar.file.name}" />
	<property name="sikulilibext.dist.structure.dir" location="${proj.sikulilibext.dir}/dist-structure" />
	<property name="final.sikulilibext.dist.dir" value="${current.dist.private.nonzipped.dir}/${sikulilibext.name}-dist" />
	<property name="private.sikulilibext.dist.nonzipped.dir" value="${current.dist.private.nonzipped.dir}/${sikulilibext.name}-dist" />
	<property name="private.sikulilibext.dist.nonzipped.jar.dir" value="${private.sikulilibext.dist.nonzipped.dir}/${sikulilibext.name}/lib" />
	<property name="private.sikulilibext.dist.nonzipped.jar.file" value="${private.sikulilibext.dist.nonzipped.jar.dir}/${sikulilibext.jar.file.name}" />
	<!-- ======================================================================================== -->
	<!-- ===================================== GLOBAL PROPERTIES =================================================== -->
	<!-- ===================================== UNITEE =================================================== -->
	<!-- ======================================================================================== -->

	<property name="unitee.build_version" value="1.0" />
	<property name="unitee.build_type" value="a" />
	<property name="unitee.release_num" value="1" />
	<property name="unitee.proj.name" value="AC-UniTEE" />
	<property name="unitee.name" value="ac-unitee" />
	<property name="unitee.github.rep.name" value="unitee" />

	<property name="proj.unitee.dir" value="${all.sources.dir}/${unitee.github.rep.name}/${unitee.proj.name}" />
	<property name="src.unitee.dir" location="${proj.unitee.dir}/src" />
	<property name="unitee.jar.file.name" value="${unitee.name}-${unitee.build_version}${unitee.build_type}${unitee.release_num}.jar" />
	<property name="ant.unitee.root.dir" value="${current.build.dir}/${unitee.proj.name}" />
	<property name="ant.unitee.build.dir" location="${ant.unitee.root.dir}/build" />
	<property name="ant.unitee.temp.dir" location="${ant.unitee.root.dir}/temp" />
	<property name="ant.unitee.obf.dir" location="${ant.unitee.root.dir}/obf" />

	<property name="ant.unitee.temp.jar.file" location="${ant.unitee.temp.dir}/${unitee.jar.file.name}" />
	<property name="ant.unitee.obf.jar.file" location="${ant.unitee.obf.dir}/${unitee.jar.file.name}" />
	<property name="unitee.dist.structure.dir" location="${proj.unitee.dir}/dist-structure" />
	<property name="final.unitee.dist.dir" value="${current.dist.private.nonzipped.dir}/${unitee.name}-dist" />
	<property name="private.unitee.dist.nonzipped.dir" value="${current.dist.private.nonzipped.dir}/${unitee.name}-dist" />
	<property name="private.unitee.dist.nonzipped.jar.dir" value="${private.unitee.dist.nonzipped.dir}/${unitee.name}/lib" />
	<property name="private.unitee.dist.nonzipped.jar.file" value="${private.unitee.dist.nonzipped.jar.dir}/${unitee.jar.file.name}" />
	<!-- ======================================================================================== -->
	<!-- ===================================== CLASSPATH =================================================== -->
	<!-- ======================================================================================== -->

	<path id="build.classpath">
		<fileset dir="${3rd_party_jars}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${current.dist.private.jars.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<target name="clean" description="clean up">
		<!-- Delete the ${build} and ${dist} directory trees -->

		<!-- ======================================================================================== -->
		<!-- ===================================== DIRECTORY STRUCTURE =================================================== -->
		<!-- ===================================== Common =================================================== -->
		<!-- ======================================================================================== -->

		<delete dir="${current.dist.dir}" />
		<mkdir dir="${current.dist.dir}" />
		<delete dir="${current.build.dir}" />
		<mkdir dir="${current.build.dir}" />

		<mkdir dir="${current.dist.public.dir}" />
		<mkdir dir="${current.dist.private.dir}" />
		<mkdir dir="${current.dist.public.zips.dir.components}" />
		<mkdir dir="${current.dist.public.zips.dir.bundles}" />
		<mkdir dir="${current.dist.public.sources.dir}" />
		<mkdir dir="${current.dist.private.nonzipped.dir}" />
		<mkdir dir="${current.dist.private.jars.dir}" />
		<mkdir dir="${current.dist.private.sources.dir}" />

		<!-- ======================================================================================== -->
		<!-- ===================================== DIRECTORY STRUCTURE =================================================== -->
		<!-- ===================================== Batteries =================================================== -->
		<!-- ======================================================================================== -->

		<mkdir dir="${ant.batteries.root.dir}" />
		<mkdir dir="${ant.batteries.build.dir}" />
		<mkdir dir="${ant.batteries.temp.dir}" />
		<mkdir dir="${ant.batteries.obf.dir}" />
		<copy todir="${private.batteries.dist.nonzipped.dir}">
			<fileset dir="${batteries.dist.structure.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
		<mkdir dir="${private.batteries.dist.nonzipped.jar.dir}" />

		<!-- ======================================================================================== -->
		<!-- ===================================== DIRECTORY STRUCTURE =================================================== -->
		<!-- ===================================== Configurator =================================================== -->
		<!-- ======================================================================================== -->

		<mkdir dir="${ant.configurator.root.dir}" />
		<mkdir dir="${ant.configurator.build.dir}" />
		<mkdir dir="${ant.configurator.temp.dir}" />
		<mkdir dir="${ant.configurator.obf.dir}" />
		<copy todir="${private.configurator.dist.nonzipped.dir}">
			<fileset dir="${configurator.dist.structure.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
		<mkdir dir="${private.configurator.dist.nonzipped.jar.dir}" />

		<!-- ======================================================================================== -->
		<!-- ===================================== DIRECTORY STRUCTURE =================================================== -->
		<!-- ===================================== Data Broker =================================================== -->
		<!-- ======================================================================================== -->
		<mkdir dir="${ant.databroker.root.dir}" />
		<mkdir dir="${ant.databroker.build.dir}" />
		<mkdir dir="${ant.databroker.temp.dir}" />
		<mkdir dir="${ant.databroker.obf.dir}" />
		<copy todir="${private.databroker.dist.nonzipped.dir}">
			<fileset dir="${databroker.dist.structure.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
		<mkdir dir="${private.databroker.dist.nonzipped.jar.dir}" />
		<!-- ======================================================================================== -->
		<!-- ===================================== DIRECTORY STRUCTURE =================================================== -->
		<!-- ===================================== Validator =================================================== -->
		<!-- ======================================================================================== -->

		<mkdir dir="${ant.validator.root.dir}" />
		<mkdir dir="${ant.validator.build.dir}" />
		<mkdir dir="${ant.validator.temp.dir}" />
		<mkdir dir="${ant.validator.obf.dir}" />
		<copy todir="${private.validator.dist.nonzipped.dir}">
			<fileset dir="${validator.dist.structure.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
		<mkdir dir="${private.validator.dist.nonzipped.jar.dir}" />
		<!-- ======================================================================================== -->
		<!-- ===================================== DIRECTORY STRUCTURE =================================================== -->
		<!-- ===================================== Test Commons =================================================== -->
		<!-- ======================================================================================== -->
		<mkdir dir="${ant.testcommons.root.dir}" />
		<mkdir dir="${ant.testcommons.build.dir}" />
		<mkdir dir="${ant.testcommons.temp.dir}" />
		<mkdir dir="${ant.testcommons.obf.dir}" />
		<copy todir="${private.testcommons.dist.nonzipped.dir}">
			<fileset dir="${testcommons.dist.structure.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
		<mkdir dir="${private.testcommons.dist.nonzipped.jar.dir}" />

		<!-- ======================================================================================== -->
		<!-- ===================================== DIRECTORY STRUCTURE =================================================== -->
		<!-- ===================================== Test Styler =================================================== -->
		<!-- ======================================================================================== -->
		<mkdir dir="${ant.teststyler.root.dir}" />
		<mkdir dir="${ant.teststyler.build.dir}" />
		<mkdir dir="${ant.teststyler.temp.dir}" />
		<mkdir dir="${ant.teststyler.obf.dir}" />
		<copy todir="${private.teststyler.dist.nonzipped.dir}">
			<fileset dir="${teststyler.dist.structure.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
		<mkdir dir="${private.teststyler.dist.nonzipped.jar.dir}" />
		<!-- ======================================================================================== -->
		<!-- ===================================== DIRECTORY STRUCTURE =================================================== -->
		<!-- ===================================== Test Reporter =================================================== -->
		<!-- ======================================================================================== -->
		<mkdir dir="${ant.testreporter.root.dir}" />
		<mkdir dir="${ant.testreporter.build.dir}" />
		<mkdir dir="${ant.testreporter.temp.dir}" />
		<mkdir dir="${ant.testreporter.obf.dir}" />
		<copy todir="${private.testreporter.dist.nonzipped.dir}">
			<fileset dir="${testreporter.dist.structure.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
		<mkdir dir="${private.testreporter.dist.nonzipped.jar.dir}" />
		<!-- ======================================================================================== -->
		<!-- ===================================== DIRECTORY STRUCTURE =================================================== -->
		<!-- ===================================== Test Runner =================================================== -->
		<!-- ======================================================================================== -->
		<mkdir dir="${ant.testrunner.root.dir}" />
		<mkdir dir="${ant.testrunner.build.dir}" />
		<mkdir dir="${ant.testrunner.temp.dir}" />
		<mkdir dir="${ant.testrunner.obf.dir}" />
		<copy todir="${private.testrunner.dist.nonzipped.dir}">
			<fileset dir="${testrunner.dist.structure.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
		<mkdir dir="${private.testrunner.dist.nonzipped.jar.dir}" />
		<!-- ======================================================================================== -->
		<!-- ===================================== DIRECTORY STRUCTURE =================================================== -->
		<!-- ===================================== UA API =================================================== -->
		<!-- ======================================================================================== -->
		<mkdir dir="${ant.uiautomatorapi.root.dir}" />
		<mkdir dir="${ant.uiautomatorapi.build.dir}" />
		<mkdir dir="${ant.uiautomatorapi.temp.dir}" />
		<mkdir dir="${ant.uiautomatorapi.obf.dir}" />
		<copy todir="${private.uiautomatorapi.dist.nonzipped.dir}">
			<fileset dir="${uiautomatorapi.dist.structure.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
		<mkdir dir="${private.uiautomatorapi.dist.nonzipped.jar.dir}" />
		<!-- ======================================================================================== -->
		<!-- ===================================== DIRECTORY STRUCTURE =================================================== -->
		<!-- ===================================== UA =================================================== -->
		<!-- ======================================================================================== -->
		<mkdir dir="${ant.uiautomator.root.dir}" />
		<mkdir dir="${ant.uiautomator.build.dir}" />
		<mkdir dir="${ant.uiautomator.temp.dir}" />
		<mkdir dir="${ant.uiautomator.obf.dir}" />
		<copy todir="${private.uiautomator.dist.nonzipped.dir}">
			<fileset dir="${uiautomator.dist.structure.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
		<mkdir dir="${private.uiautomator.dist.nonzipped.jar.dir}" />
		<!-- ======================================================================================== -->
		<!-- ===================================== DIRECTORY STRUCTURE =================================================== -->
		<!-- ===================================== UA EXT =================================================== -->
		<!-- ======================================================================================== -->
		<mkdir dir="${ant.uiautomatorlibext.root.dir}" />
		<mkdir dir="${ant.uiautomatorlibext.build.dir}" />
		<mkdir dir="${ant.uiautomatorlibext.temp.dir}" />
		<mkdir dir="${ant.uiautomatorlibext.obf.dir}" />
		<copy todir="${private.uiautomatorlibext.dist.nonzipped.dir}">
			<fileset dir="${uiautomatorlibext.dist.structure.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
		<mkdir dir="${private.uiautomatorlibext.dist.nonzipped.jar.dir}" />
		<!-- ======================================================================================== -->
		<!-- ===================================== DIRECTORY STRUCTURE =================================================== -->
		<!-- ===================================== Appium API =================================================== -->
		<!-- ======================================================================================== -->
		<mkdir dir="${ant.appiumapi.root.dir}" />
		<mkdir dir="${ant.appiumapi.build.dir}" />
		<mkdir dir="${ant.appiumapi.temp.dir}" />
		<mkdir dir="${ant.appiumapi.obf.dir}" />
		<copy todir="${private.appiumapi.dist.nonzipped.dir}">
			<fileset dir="${appiumapi.dist.structure.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
		<mkdir dir="${private.appiumapi.dist.nonzipped.jar.dir}" />
		<!-- ======================================================================================== -->
		<!-- ===================================== DIRECTORY STRUCTURE =================================================== -->
		<!-- ===================================== Appium =================================================== -->
		<!-- ======================================================================================== -->

		<mkdir dir="${ant.appium.root.dir}" />
		<mkdir dir="${ant.appium.build.dir}" />
		<mkdir dir="${ant.appium.temp.dir}" />
		<mkdir dir="${ant.appium.obf.dir}" />
		<copy todir="${private.appium.dist.nonzipped.dir}">
			<fileset dir="${appium.dist.structure.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
		<mkdir dir="${private.appium.dist.nonzipped.jar.dir}" />
		<!-- ======================================================================================== -->
		<!-- ===================================== DIRECTORY STRUCTURE =================================================== -->
		<!-- ===================================== Appium Ext =================================================== -->
		<!-- ======================================================================================== -->
		<mkdir dir="${ant.appiumlibext.root.dir}" />
		<mkdir dir="${ant.appiumlibext.build.dir}" />
		<mkdir dir="${ant.appiumlibext.temp.dir}" />
		<mkdir dir="${ant.appiumlibext.obf.dir}" />
		<copy todir="${private.appiumlibext.dist.nonzipped.dir}">
			<fileset dir="${appiumlibext.dist.structure.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
		<mkdir dir="${private.appiumlibext.dist.nonzipped.jar.dir}" />
		<!-- ======================================================================================== -->
		<!-- ===================================== DIRECTORY STRUCTURE =================================================== -->
		<!-- ===================================== WD API =================================================== -->
		<!-- ======================================================================================== -->
		<mkdir dir="${ant.seleniumapi.root.dir}" />
		<mkdir dir="${ant.seleniumapi.build.dir}" />
		<mkdir dir="${ant.seleniumapi.temp.dir}" />
		<mkdir dir="${ant.seleniumapi.obf.dir}" />
		<copy todir="${private.seleniumapi.dist.nonzipped.dir}">
			<fileset dir="${seleniumapi.dist.structure.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
		<mkdir dir="${private.seleniumapi.dist.nonzipped.jar.dir}" />
		<!-- ======================================================================================== -->
		<!-- ===================================== DIRECTORY STRUCTURE =================================================== -->
		<!-- ===================================== WD =================================================== -->
		<!-- ======================================================================================== -->
		<mkdir dir="${ant.selenium.root.dir}" />
		<mkdir dir="${ant.selenium.build.dir}" />
		<mkdir dir="${ant.selenium.temp.dir}" />
		<mkdir dir="${ant.selenium.obf.dir}" />
		<copy todir="${private.selenium.dist.nonzipped.dir}">
			<fileset dir="${selenium.dist.structure.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
		<mkdir dir="${private.selenium.dist.nonzipped.jar.dir}" />
		<!-- ======================================================================================== -->
		<!-- ===================================== DIRECTORY STRUCTURE =================================================== -->
		<!-- ===================================== WD Ext =================================================== -->
		<!-- ======================================================================================== -->
		<mkdir dir="${ant.seleniumlibext.root.dir}" />
		<mkdir dir="${ant.seleniumlibext.build.dir}" />
		<mkdir dir="${ant.seleniumlibext.temp.dir}" />
		<mkdir dir="${ant.seleniumlibext.obf.dir}" />
		<copy todir="${private.seleniumlibext.dist.nonzipped.dir}">
			<fileset dir="${seleniumlibext.dist.structure.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
		<mkdir dir="${private.seleniumlibext.dist.nonzipped.jar.dir}" />
		<!-- ======================================================================================== -->
		<!-- ===================================== DIRECTORY STRUCTURE =================================================== -->
		<!-- ===================================== Sikuli API =================================================== -->
		<!-- ======================================================================================== -->
		<mkdir dir="${ant.sikuliapi.root.dir}" />
		<mkdir dir="${ant.sikuliapi.build.dir}" />
		<mkdir dir="${ant.sikuliapi.temp.dir}" />
		<mkdir dir="${ant.sikuliapi.obf.dir}" />
		<copy todir="${private.sikuliapi.dist.nonzipped.dir}">
			<fileset dir="${sikuliapi.dist.structure.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
		<mkdir dir="${private.sikuliapi.dist.nonzipped.jar.dir}" />
		<!-- ======================================================================================== -->
		<!-- ===================================== DIRECTORY STRUCTURE =================================================== -->
		<!-- ===================================== Sikuli =================================================== -->
		<!-- ======================================================================================== -->
		<mkdir dir="${ant.sikuli.root.dir}" />
		<mkdir dir="${ant.sikuli.build.dir}" />
		<mkdir dir="${ant.sikuli.temp.dir}" />
		<mkdir dir="${ant.sikuli.obf.dir}" />
		<copy todir="${private.sikuli.dist.nonzipped.dir}">
			<fileset dir="${sikuli.dist.structure.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
		<mkdir dir="${private.sikuli.dist.nonzipped.jar.dir}" />
		<!-- ======================================================================================== -->
		<!-- ===================================== DIRECTORY STRUCTURE =================================================== -->
		<!-- ===================================== Sikuli Ext =================================================== -->
		<!-- ======================================================================================== -->
		<mkdir dir="${ant.sikulilibext.root.dir}" />
		<mkdir dir="${ant.sikulilibext.build.dir}" />
		<mkdir dir="${ant.sikulilibext.temp.dir}" />
		<mkdir dir="${ant.sikulilibext.obf.dir}" />
		<copy todir="${private.sikulilibext.dist.nonzipped.dir}">
			<fileset dir="${sikulilibext.dist.structure.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
		<mkdir dir="${private.sikulilibext.dist.nonzipped.jar.dir}" />
		<!-- ======================================================================================== -->
		<!-- ===================================== DIRECTORY STRUCTURE =================================================== -->
		<!-- ===================================== Unitee =================================================== -->
		<!-- ======================================================================================== -->

		<mkdir dir="${ant.unitee.root.dir}" />
		<mkdir dir="${ant.unitee.build.dir}" />
		<mkdir dir="${ant.unitee.temp.dir}" />


		<!-- ===================================== AC-Batteries =================================================== -->

		<target name="batteries_build" depends="clean">
			<!-- Create the time stamp -->
			<tstamp />
			<!-- Create the build directory structure used by compile -->

			<javac srcdir="${src.batteries.dir}" destdir="${ant.batteries.build.dir}" debug="true" debuglevel="lines,vars,source" includeantruntime="false">
				<classpath refid="build.classpath" />
			</javac>

			<jar jarfile="${ant.batteries.temp.jar.file}" basedir="${ant.batteries.build.dir}" />

		</target>

		<target name="batteries_obfuscate" depends="batteries_build">
			<proguard allowaccessmodification="true" usemixedcaseclassnames="false" defaultpackage="" ignorewarnings="true" shrink="false" keepparameternames="true" skipnonpubliclibraryclasses="false" printseeds="obfuscateseeds.txt" printusage="obfuscateusage.txt" printmapping="obfuscatemapping.txt" repackageclasses="com.autocognite.batteries.pvt">

				<!-- specify which jar files should be obfuscated -->
				<injar name="${ant.batteries.temp.jar.file}" />

				<!-- java libraries my java application depends on -->
				<libraryjar name="/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/rt.jar" />
				<!-- rt.jar on other platforms -->
				<libraryjar name="${3rd_party_jars}/commons-cli-1.3.jar" />
				<libraryjar name="${3rd_party_jars}/commons-io-2.4.jar" />
				<libraryjar name="${3rd_party_jars}/commons-lang3-3.4.jar" />
				<!-- crypto stuff -->
				<libraryjar name="${3rd_party_jars}/commons-validator-1.5.0.jar" />
				<libraryjar name="${3rd_party_jars}/ini4j-0.5.4.jar" />
				<libraryjar name="${3rd_party_jars}/jna-4.2.2.jar" />
				<libraryjar name="${3rd_party_jars}/jna-platform-4.2.2.jar" />
				<libraryjar name="${3rd_party_jars}/log4j-1.2.17.jar" />
				<libraryjar name="${3rd_party_jars}/poi-3.12-20150511.jar" />
				<!-- the output jar file that should be created with the obfuscated java 
	class files -->
				<outjar name="${ant.batteries.obf.jar.file}" />
				<keeppackagename name="com.autocognite.batteries.lib.**" />
				<!-- don't obfuscate this method -->

				<keepattribute name="*Annotation*" />

				<keep name="com.autocognite.batteries.**" access="public">
					<method access="public" name="*" />
					<method access="protected" name="*" />
				</keep>

				<keep name="com.autocognite.batteries.pvt.**" allowobfuscation="true">
				</keep>

				<keep name="com.autocognite.batteries.lib.**" access="public">
					<method access="public" name="*" />
					<method access="protected" name="*" />
				</keep>


				<keep name="com.autocognite.batteries.api.**" access="public">
					<method access="public" name="*" />
					<method access="protected" name="*" />
				</keep>

				<keep name="com.autocognite.batteries.api.enums.**" access="public">
					<field name="*" />
					<method access="public static" type="**[]" name="values" parameters="" />
					<method access="public static" type="**" name="valueOf" parameters="java.lang.String" />
				</keep>

				<keepattribute name="LineNumberTable" />
				<keepattribute name="SourceFile" />
				<keepattribute name="Exceptions" />
				<keepattribute name="Signature" />
				<keepattribute name="InnerClasses" />
			</proguard>
		</target>

		<target name="batteries_final" depends="batteries_obfuscate">

			<copy file="${ant.batteries.obf.jar.file}" tofile="${private.batteries.dist.nonzipped.jar.file}" />

			<copy file="${ant.batteries.obf.jar.file}" tofile="${current.dist.private.jars.dir}/${batteries.jar.file.name}" />
		</target>

		<!-- ===================================== AC-Configurator =================================================== -->

		<target name="configurator_build" depends="batteries_final">
			<!-- Create the time stamp -->
			<tstamp />
			<!-- Create the build directory structure used by compile -->

			<javac srcdir="${src.configurator.dir}" destdir="${ant.configurator.build.dir}" debug="true" debuglevel="lines,vars,source" includeantruntime="false">
				<classpath refid="build.classpath" />
			</javac>

			<jar jarfile="${ant.configurator.temp.jar.file}" basedir="${ant.configurator.build.dir}" />

		</target>

		<target name="configurator_obfuscate" depends="configurator_build">
			<proguard allowaccessmodification="true" usemixedcaseclassnames="false" defaultpackage="" ignorewarnings="true" shrink="false" keepparameternames="true" skipnonpubliclibraryclasses="false" printseeds="obfuscateseeds.txt" printusage="obfuscateusage.txt" printmapping="obfuscatemapping.txt" repackageclasses="com.autocognite.configurator.pvt">

				<!-- specify which jar files should be obfuscated -->
				<injar name="${ant.configurator.temp.jar.file}" />

				<!-- java libraries my java application depends on -->
				<libraryjar name="/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/rt.jar" />
				<!-- rt.jar on other platforms -->
				<libraryjar name="${3rd_party_jars}/commons-cli-1.3.jar" />
				<libraryjar name="${3rd_party_jars}/commons-io-2.4.jar" />
				<libraryjar name="${3rd_party_jars}/commons-lang3-3.4.jar" />
				<!-- crypto stuff -->
				<libraryjar name="${3rd_party_jars}/commons-validator-1.5.0.jar" />
				<libraryjar name="${3rd_party_jars}/ini4j-0.5.4.jar" />
				<libraryjar name="${3rd_party_jars}/jna-4.2.2.jar" />
				<libraryjar name="${3rd_party_jars}/jna-platform-4.2.2.jar" />
				<libraryjar name="${3rd_party_jars}/log4j-1.2.17.jar" />
				<libraryjar name="${current.dist.private.jars.dir}/${batteries.jar.file.name}" />

				<libraryjar name="${3rd_party_jars}/poi-3.12-20150511.jar" />
				<!-- the output jar file that should be created with the obfuscated java 
	class files -->
				<outjar name="${ant.configurator.obf.jar.file}" />
				<keeppackagename name="com.autocognite.configurator.lib.**" />
				<!-- don't obfuscate this method -->

				<keepattribute name="*Annotation*" />

				<keep name="com.autocognite.configurator.pvt.lib.**" allowobfuscation="true">
				</keep>

				<keep name="com.autocognite.configurator.Configurator" access="public">
					<method access="public" name="*" />
					<method access="protected" name="*" />
					<field name="*" access="public" />
				</keep>

				<keep name="com.autocognite.configurator.lib.**" access="public">
					<method access="public" name="*" />
					<method access="protected" name="*" />
				</keep>


				<keep name="com.autocognite.configurator.api.**" access="public">
					<method access="public" name="*" />
					<method access="protected" name="*" />
				</keep>

				<keep name="com.autocognite.configurator.api.enums.**" access="public">
					<field name="*" />
					<method access="public static" type="**[]" name="values" parameters="" />
					<method access="public static" type="**" name="valueOf" parameters="java.lang.String" />
				</keep>

				<keepclassmembers name="com.autocognite.configurator.pvt.lib.ConfiguratorSingleton" allowobfuscation="true">
					<field name="INSTANCE" />
					<method access="public static" type="**[]" name="values" parameters="" />
					<method access="public static" type="**" name="valueOf" parameters="java.lang.String" />
				</keepclassmembers>

				<keepattribute name="LineNumberTable" />
				<keepattribute name="SourceFile" />
				<keepattribute name="Exceptions" />
				<keepattribute name="Signature" />
				<keepattribute name="InnerClasses" />
			</proguard>
		</target>

		<target name="configurator_final" depends="configurator_obfuscate">

			<copy file="${ant.configurator.obf.jar.file}" tofile="${private.configurator.dist.nonzipped.jar.file}" />

			<copy file="${ant.configurator.obf.jar.file}" tofile="${current.dist.private.jars.dir}/${configurator.jar.file.name}" />
		</target>

		<!-- ===================================== AC-DataBroker =================================================== -->

		<target name="databroker_build" depends="configurator_final">
			<!-- Create the time stamp -->
			<tstamp />
			<!-- Create the build directory structure used by compile -->

			<javac srcdir="${src.databroker.dir}" destdir="${ant.databroker.build.dir}" debug="true" debuglevel="lines,vars,source" includeantruntime="false">
				<classpath refid="build.classpath" />
			</javac>

			<jar jarfile="${ant.databroker.temp.jar.file}" basedir="${ant.databroker.build.dir}" />

		</target>

		<target name="databroker_obfuscate" depends="databroker_build">
			<proguard allowaccessmodification="true" usemixedcaseclassnames="false" defaultpackage="" ignorewarnings="true" shrink="false" keepparameternames="true" skipnonpubliclibraryclasses="false" printseeds="obfuscateseeds.txt" printusage="obfuscateusage.txt" printmapping="obfuscatemapping.txt" repackageclasses="com.autocognite.databroker.pvt">

				<!-- specify which jar files should be obfuscated -->
				<injar name="${ant.databroker.temp.jar.file}" />

				<!-- java libraries my java application depends on -->
				<libraryjar name="/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/rt.jar" />
				<!-- rt.jar on other platforms -->
				<libraryjar name="${3rd_party_jars}/commons-cli-1.3.jar" />
				<libraryjar name="${3rd_party_jars}/commons-io-2.4.jar" />
				<libraryjar name="${3rd_party_jars}/commons-lang3-3.4.jar" />
				<!-- crypto stuff -->
				<libraryjar name="${3rd_party_jars}/commons-validator-1.5.0.jar" />
				<libraryjar name="${3rd_party_jars}/ini4j-0.5.4.jar" />
				<libraryjar name="${3rd_party_jars}/jna-4.2.2.jar" />
				<libraryjar name="${3rd_party_jars}/jna-platform-4.2.2.jar" />
				<libraryjar name="${3rd_party_jars}/log4j-1.2.17.jar" />
				<libraryjar name="${3rd_party_jars}/poi-3.12-20150511.jar" />

				<libraryjar name="${current.dist.private.jars.dir}/${batteries.jar.file.name}" />
				<libraryjar name="${current.dist.private.jars.dir}/${configurator.jar.file.name}" />

				<!-- the output jar file that should be created with the obfuscated java 
	class files -->
				<outjar name="${ant.databroker.obf.jar.file}" />
				<keeppackagename name="com.autocognite.databroker.lib.**" />
				<!-- don't obfuscate this method -->

				<keepattribute name="*Annotation*" />

				<keep name="com.autocognite.databroker.pvt.lib.**" allowobfuscation="true">
				</keep>

				<keep name="com.autocognite.databroker.DataBroker" access="public">
					<method access="public" name="*" />
					<method access="protected" name="*" />
					<field name="*" access="public" />
				</keep>

				<keep name="com.autocognite.databroker.lib.**" access="public">
					<method access="public" name="*" />
					<method access="protected" name="*" />
				</keep>


				<keep name="com.autocognite.databroker.api.**" access="public">
					<method access="public" name="*" />
					<method access="protected" name="*" />
				</keep>

				<keep name="com.autocognite.databroker.api.enums.**" access="public">
					<field name="*" />
					<method access="public static" type="**[]" name="values" parameters="" />
					<method access="public static" type="**" name="valueOf" parameters="java.lang.String" />
				</keep>

				<keepclassmembers name="com.autocognite.databroker.pvt.lib.DataBrokerSingleton" allowobfuscation="true">
					<field name="INSTANCE" />
					<method access="public static" type="**[]" name="values" parameters="" />
					<method access="public static" type="**" name="valueOf" parameters="java.lang.String" />
				</keepclassmembers>

				<keepattribute name="LineNumberTable" />
				<keepattribute name="SourceFile" />
				<keepattribute name="Exceptions" />
				<keepattribute name="Signature" />
				<keepattribute name="InnerClasses" />
			</proguard>
		</target>

		<target name="databroker_final" depends="databroker_obfuscate">

			<copy file="${ant.databroker.obf.jar.file}" tofile="${private.databroker.dist.nonzipped.jar.file}" />

			<copy file="${ant.databroker.obf.jar.file}" tofile="${current.dist.private.jars.dir}/${databroker.jar.file.name}" />
		</target>

		<!-- ===================================== AC-Validator =================================================== -->

		<target name="validator_build" depends="databroker_final">
			<!-- Create the time stamp -->
			<tstamp />
			<!-- Create the build directory structure used by compile -->

			<javac srcdir="${src.validator.dir}" destdir="${ant.validator.build.dir}" debug="true" debuglevel="lines,vars,source" includeantruntime="false">
				<classpath refid="build.classpath" />
			</javac>

			<jar jarfile="${ant.validator.temp.jar.file}" basedir="${ant.validator.build.dir}" />

		</target>

		<target name="validator_obfuscate" depends="validator_build">
			<proguard allowaccessmodification="true" usemixedcaseclassnames="false" defaultpackage="" ignorewarnings="true" shrink="false" keepparameternames="true" skipnonpubliclibraryclasses="false" printseeds="obfuscateseeds.txt" printusage="obfuscateusage.txt" printmapping="obfuscatemapping.txt" repackageclasses="com.autocognite.validator.pvt">

				<!-- specify which jar files should be obfuscated -->
				<injar name="${ant.validator.temp.jar.file}" />

				<!-- java libraries my java application depends on -->
				<libraryjar name="/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/rt.jar" />
				<!-- rt.jar on other platforms -->
				<libraryjar name="${3rd_party_jars}/commons-cli-1.3.jar" />
				<libraryjar name="${3rd_party_jars}/commons-io-2.4.jar" />
				<libraryjar name="${3rd_party_jars}/commons-lang3-3.4.jar" />
				<!-- crypto stuff -->
				<libraryjar name="${3rd_party_jars}/commons-validator-1.5.0.jar" />
				<libraryjar name="${3rd_party_jars}/ini4j-0.5.4.jar" />
				<libraryjar name="${3rd_party_jars}/jna-4.2.2.jar" />
				<libraryjar name="${3rd_party_jars}/jna-platform-4.2.2.jar" />
				<libraryjar name="${3rd_party_jars}/log4j-1.2.17.jar" />
				<libraryjar name="${3rd_party_jars}/poi-3.12-20150511.jar" />

				<libraryjar name="${current.dist.private.jars.dir}/${batteries.jar.file.name}" />
				<libraryjar name="${current.dist.private.jars.dir}/${configurator.jar.file.name}" />
				<libraryjar name="${current.dist.private.jars.dir}/${databroker.jar.file.name}" />

				<!-- the output jar file that should be created with the obfuscated java 
	class files -->
				<outjar name="${ant.validator.obf.jar.file}" />
				<keeppackagename name="com.autocognite.validator.lib.**" />
				<!-- don't obfuscate this method -->

				<keepattribute name="*Annotation*" />

				<keep name="com.autocognite.validator.pvt.lib.**" allowobfuscation="true">
				</keep>

				<keep name="com.autocognite.validator.Validator" access="public">
					<method access="public" name="*" />
					<method access="protected" name="*" />
					<field name="*" access="public" />
				</keep>

				<keep name="com.autocognite.validator.lib.**" access="public">
					<method access="public" name="*" />
					<method access="protected" name="*" />
				</keep>


				<keep name="com.autocognite.validator.api.**" access="public">
					<method access="public" name="*" />
					<method access="protected" name="*" />
				</keep>

				<keep name="com.autocognite.validator.api.enums.**" access="public">
					<field name="*" />
					<method access="public static" type="**[]" name="values" parameters="" />
					<method access="public static" type="**" name="valueOf" parameters="java.lang.String" />
				</keep>

				<keepclassmembers name="com.autocognite.validator.pvt.lib.ValidatorSingleton" allowobfuscation="true">
					<field name="INSTANCE" />
					<method access="public static" type="**[]" name="values" parameters="" />
					<method access="public static" type="**" name="valueOf" parameters="java.lang.String" />
				</keepclassmembers>

				<keepattribute name="LineNumberTable" />
				<keepattribute name="SourceFile" />
				<keepattribute name="Exceptions" />
				<keepattribute name="Signature" />
				<keepattribute name="InnerClasses" />
			</proguard>
		</target>

		<target name="validator_final" depends="validator_obfuscate">

			<copy file="${ant.validator.obf.jar.file}" tofile="${private.validator.dist.nonzipped.jar.file}" />

			<copy file="${ant.validator.obf.jar.file}" tofile="${current.dist.private.jars.dir}/${validator.jar.file.name}" />
		</target>

		<!-- ===================================== AC-TestCommons =================================================== -->

		<target name="testcommons_build" depends="validator_final">
			<!-- Create the time stamp -->
			<tstamp />
			<!-- Create the build directory structure used by compile -->

			<javac srcdir="${src.testcommons.dir}" destdir="${ant.testcommons.build.dir}" debug="true" debuglevel="lines,vars,source" includeantruntime="false">
				<classpath refid="build.classpath" />
			</javac>

			<jar jarfile="${ant.testcommons.temp.jar.file}" basedir="${ant.testcommons.build.dir}" />
			<copy file="${ant.testcommons.temp.jar.file}" tofile="${ant.testcommons.obf.jar.file}" />
		</target>

		<target name="testcommons_final" depends="testcommons_build">

			<copy file="${ant.testcommons.obf.jar.file}" tofile="${private.testcommons.dist.nonzipped.jar.file}" />

			<copy file="${ant.testcommons.obf.jar.file}" tofile="${current.dist.private.jars.dir}/${testcommons.jar.file.name}" />
		</target>

		<!-- ===================================== AC-teststyler =================================================== -->

		<target name="teststyler_build" depends="testcommons_final">
			<!-- Create the time stamp -->
			<tstamp />
			<!-- Create the build directory structure used by compile -->

			<javac srcdir="${src.teststyler.dir}" destdir="${ant.teststyler.build.dir}" debug="true" debuglevel="lines,vars,source" includeantruntime="false">
				<classpath refid="build.classpath" />
			</javac>

			<jar jarfile="${ant.teststyler.temp.jar.file}" basedir="${ant.teststyler.build.dir}" />

		</target>

		<target name="teststyler_obfuscate" depends="teststyler_build">
			<proguard allowaccessmodification="true" usemixedcaseclassnames="false" defaultpackage="" ignorewarnings="true" shrink="false" keepparameternames="true" skipnonpubliclibraryclasses="false" printseeds="obfuscateseeds.txt" printusage="obfuscateusage.txt" printmapping="obfuscatemapping.txt" repackageclasses="com.autocognite.teststyler.pvt">

				<!-- specify which jar files should be obfuscated -->
				<injar name="${ant.teststyler.temp.jar.file}" />

				<!-- java libraries my java application depends on -->
				<libraryjar name="/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/rt.jar" />
				<!-- rt.jar on other platforms -->
				<libraryjar name="${3rd_party_jars}/commons-cli-1.3.jar" />
				<libraryjar name="${3rd_party_jars}/commons-io-2.4.jar" />
				<libraryjar name="${3rd_party_jars}/commons-lang3-3.4.jar" />
				<!-- crypto stuff -->
				<libraryjar name="${3rd_party_jars}/commons-validator-1.5.0.jar" />
				<libraryjar name="${3rd_party_jars}/ini4j-0.5.4.jar" />
				<libraryjar name="${3rd_party_jars}/jna-4.2.2.jar" />
				<libraryjar name="${3rd_party_jars}/jna-platform-4.2.2.jar" />
				<libraryjar name="${3rd_party_jars}/log4j-1.2.17.jar" />
				<libraryjar name="${3rd_party_jars}/poi-3.12-20150511.jar" />

				<libraryjar name="${current.dist.private.jars.dir}/${batteries.jar.file.name}" />
				<libraryjar name="${current.dist.private.jars.dir}/${configurator.jar.file.name}" />
				<libraryjar name="${current.dist.private.jars.dir}/${databroker.jar.file.name}" />
				<libraryjar name="${current.dist.private.jars.dir}/${testcommons.jar.file.name}" />

				<!-- the output jar file that should be created with the obfuscated java 
	class files -->
				<outjar name="${ant.teststyler.obf.jar.file}" />
				<keeppackagename name="com.autocognite.teststyler.lib.**" />
				<!-- don't obfuscate this method -->

				<keepattribute name="*Annotation*" />

				<keep name="com.autocognite.teststyler.pvt.lib.**" allowobfuscation="true">
				</keep>

				<keep name="com.autocognite.teststyler.TestStyler" access="public">
					<method access="public" name="*" />
					<method access="protected" name="*" />
					<field name="*" access="public" />
				</keep>

				<keep name="com.autocognite.teststyler.lib.**" access="public">
					<method access="public" name="*" />
					<method access="protected" name="*" />
				</keep>

				<keep name="com.autocognite.teststyler.api.**" access="public">
					<method access="public" name="*" />
					<method access="protected" name="*" />
				</keep>

				<keep name="com.autocognite.teststyler.api.enums.**" access="public">
					<field name="*" />
					<method access="public static" type="**[]" name="values" parameters="" />
					<method access="public static" type="**" name="valueOf" parameters="java.lang.String" />
				</keep>

				<keepclassmembers name="com.autocognite.teststyler.pvt.lib.TestStylerSingleton" allowobfuscation="true">
					<field name="INSTANCE" />
					<method access="public static" type="**[]" name="values" parameters="" />
					<method access="public static" type="**" name="valueOf" parameters="java.lang.String" />
				</keepclassmembers>

				<keepattribute name="LineNumberTable" />
				<keepattribute name="SourceFile" />
				<keepattribute name="Exceptions" />
				<keepattribute name="Signature" />
				<keepattribute name="InnerClasses" />
			</proguard>
		</target>

		<target name="teststyler_final" depends="teststyler_obfuscate">

			<copy file="${ant.teststyler.obf.jar.file}" tofile="${private.teststyler.dist.nonzipped.jar.file}" />

			<copy file="${ant.teststyler.obf.jar.file}" tofile="${current.dist.private.jars.dir}/${teststyler.jar.file.name}" />
		</target>

		<!-- ===================================== AC-testreporter =================================================== -->

		<target name="testreporter_build" depends="teststyler_final">
			<!-- Create the time stamp -->
			<tstamp />
			<!-- Create the build directory structure used by compile -->

			<javac srcdir="${src.testreporter.dir}" destdir="${ant.testreporter.build.dir}" debug="true" debuglevel="lines,vars,source" includeantruntime="false">
				<classpath refid="build.classpath" />
			</javac>

			<jar jarfile="${ant.testreporter.temp.jar.file}" basedir="${ant.testreporter.build.dir}" />

		</target>

		<target name="testreporter_obfuscate" depends="testreporter_build">
			<proguard allowaccessmodification="true" usemixedcaseclassnames="false" defaultpackage="" ignorewarnings="true" shrink="false" keepparameternames="true" skipnonpubliclibraryclasses="false" printseeds="obfuscateseeds.txt" printusage="obfuscateusage.txt" printmapping="obfuscatemapping.txt" repackageclasses="com.autocognite.testreporter.pvt">

				<!-- specify which jar files should be obfuscated -->
				<injar name="${ant.testreporter.temp.jar.file}" />

				<!-- java libraries my java application depends on -->
				<libraryjar name="/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/rt.jar" />
				<!-- rt.jar on other platforms -->
				<libraryjar name="${3rd_party_jars}/commons-cli-1.3.jar" />
				<libraryjar name="${3rd_party_jars}/commons-io-2.4.jar" />
				<libraryjar name="${3rd_party_jars}/commons-lang3-3.4.jar" />
				<!-- crypto stuff -->
				<libraryjar name="${3rd_party_jars}/commons-validator-1.5.0.jar" />
				<libraryjar name="${3rd_party_jars}/ini4j-0.5.4.jar" />
				<libraryjar name="${3rd_party_jars}/jna-4.2.2.jar" />
				<libraryjar name="${3rd_party_jars}/jna-platform-4.2.2.jar" />
				<libraryjar name="${3rd_party_jars}/log4j-1.2.17.jar" />
				<libraryjar name="${3rd_party_jars}/poi-3.12-20150511.jar" />

				<libraryjar name="${current.dist.private.jars.dir}/${batteries.jar.file.name}" />
				<libraryjar name="${current.dist.private.jars.dir}/${configurator.jar.file.name}" />
				<libraryjar name="${current.dist.private.jars.dir}/${databroker.jar.file.name}" />
				<libraryjar name="${current.dist.private.jars.dir}/${testcommons.jar.file.name}" />

				<!-- the output jar file that should be created with the obfuscated java 
	class files -->
				<outjar name="${ant.testreporter.obf.jar.file}" />
				<keeppackagename name="com.autocognite.testreporter.lib.**" />
				<!-- don't obfuscate this method -->

				<keepattribute name="*Annotation*" />

				<keep name="com.autocognite.testreporter.pvt.lib.**" allowobfuscation="true">
				</keep>

				<keep name="com.autocognite.testreporter.TestReporter" access="public">
					<method access="public" name="*" />
					<method access="protected" name="*" />
					<field name="*" access="public" />
				</keep>

				<keep name="com.autocognite.testreporter.lib.**" access="public">
					<method access="public" name="*" />
					<method access="protected" name="*" />
				</keep>

				<keep name="com.autocognite.testreporter.api.**" access="public">
					<method access="public" name="*" />
					<method access="protected" name="*" />
				</keep>

				<keep name="com.autocognite.testreporter.api.enums.**" access="public">
					<field name="*" />
					<method access="public static" type="**[]" name="values" parameters="" />
					<method access="public static" type="**" name="valueOf" parameters="java.lang.String" />
				</keep>

				<keepclassmembers name="com.autocognite.testreporter.pvt.lib.TestReporterSingleton" allowobfuscation="true">
					<field name="INSTANCE" />
					<method access="public static" type="**[]" name="values" parameters="" />
					<method access="public static" type="**" name="valueOf" parameters="java.lang.String" />
				</keepclassmembers>

				<keepattribute name="LineNumberTable" />
				<keepattribute name="SourceFile" />
				<keepattribute name="Exceptions" />
				<keepattribute name="Signature" />
				<keepattribute name="InnerClasses" />
			</proguard>
		</target>

		<target name="testreporter_final" depends="testreporter_obfuscate">

			<copy file="${ant.testreporter.obf.jar.file}" tofile="${private.testreporter.dist.nonzipped.jar.file}" />

			<copy file="${ant.testreporter.obf.jar.file}" tofile="${current.dist.private.jars.dir}/${testreporter.jar.file.name}" />
		</target>

		<!-- ===================================== AC-testrunner =================================================== -->

		<target name="testrunner_build" depends="testreporter_final">
			<!-- Create the time stamp -->
			<tstamp />
			<!-- Create the build directory structure used by compile -->

			<javac srcdir="${src.testrunner.dir}" destdir="${ant.testrunner.build.dir}" debug="true" debuglevel="lines,vars,source" includeantruntime="false">
				<classpath refid="build.classpath" />
			</javac>

			<jar jarfile="${ant.testrunner.temp.jar.file}" basedir="${ant.testrunner.build.dir}" />

		</target>

		<target name="testrunner_obfuscate" depends="testrunner_build">
			<proguard allowaccessmodification="true" usemixedcaseclassnames="false" defaultpackage="" ignorewarnings="true" shrink="false" keepparameternames="true" skipnonpubliclibraryclasses="false" printseeds="obfuscateseeds.txt" printusage="obfuscateusage.txt" printmapping="obfuscatemapping.txt" repackageclasses="com.autocognite.testrunner.pvt">

				<!-- specify which jar files should be obfuscated -->
				<injar name="${ant.testrunner.temp.jar.file}" />

				<!-- java libraries my java application depends on -->
				<libraryjar name="/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/rt.jar" />
				<!-- rt.jar on other platforms -->
				<libraryjar name="${3rd_party_jars}/commons-cli-1.3.jar" />
				<libraryjar name="${3rd_party_jars}/commons-io-2.4.jar" />
				<libraryjar name="${3rd_party_jars}/commons-lang3-3.4.jar" />
				<!-- crypto stuff -->
				<libraryjar name="${3rd_party_jars}/commons-validator-1.5.0.jar" />
				<libraryjar name="${3rd_party_jars}/ini4j-0.5.4.jar" />
				<libraryjar name="${3rd_party_jars}/jna-4.2.2.jar" />
				<libraryjar name="${3rd_party_jars}/jna-platform-4.2.2.jar" />
				<libraryjar name="${3rd_party_jars}/log4j-1.2.17.jar" />
				<libraryjar name="${3rd_party_jars}/poi-3.12-20150511.jar" />

				<libraryjar name="${current.dist.private.jars.dir}/${batteries.jar.file.name}" />
				<libraryjar name="${current.dist.private.jars.dir}/${configurator.jar.file.name}" />
				<libraryjar name="${current.dist.private.jars.dir}/${databroker.jar.file.name}" />
				<libraryjar name="${current.dist.private.jars.dir}/${testcommons.jar.file.name}" />

				<!-- the output jar file that should be created with the obfuscated java 
	class files -->
				<outjar name="${ant.testrunner.obf.jar.file}" />
				<keeppackagename name="com.autocognite.testrunner.lib.**" />
				<!-- don't obfuscate this method -->

				<keepattribute name="*Annotation*" />

				<keep name="com.autocognite.testrunner.pvt.lib.**" allowobfuscation="true">
				</keep>

				<keep name="com.autocognite.testrunner.TestRunner" access="public">
					<method access="public" name="*" />
					<method access="protected" name="*" />
					<field name="*" access="public" />
				</keep>

				<keep name="com.autocognite.testrunner.lib.**" access="public">
					<method access="public" name="*" />
					<method access="protected" name="*" />
				</keep>

				<keep name="com.autocognite.testrunner.api.**" access="public">
					<method access="public" name="*" />
					<method access="protected" name="*" />
				</keep>

				<keep name="com.autocognite.testrunner.api.enums.**" access="public">
					<field name="*" />
					<method access="public static" type="**[]" name="values" parameters="" />
					<method access="public static" type="**" name="valueOf" parameters="java.lang.String" />
				</keep>

				<keepclassmembers name="com.autocognite.testrunner.pvt.lib.TestRunnerSingleton" allowobfuscation="true">
					<field name="INSTANCE" />
					<method access="public static" type="**[]" name="values" parameters="" />
					<method access="public static" type="**" name="valueOf" parameters="java.lang.String" />
				</keepclassmembers>

				<keepattribute name="LineNumberTable" />
				<keepattribute name="SourceFile" />
				<keepattribute name="Exceptions" />
				<keepattribute name="Signature" />
				<keepattribute name="InnerClasses" />
			</proguard>
		</target>

		<target name="testrunner_final" depends="testrunner_obfuscate">

			<copy file="${ant.testrunner.obf.jar.file}" tofile="${private.testrunner.dist.nonzipped.jar.file}" />

			<copy file="${ant.testrunner.obf.jar.file}" tofile="${current.dist.private.jars.dir}/${testrunner.jar.file.name}" />
		</target>

		<!-- ===================================== AC-uiautomatorapi =================================================== -->

		<target name="uiautomatorapi_build" depends="testrunner_final">
			<!-- Create the time stamp -->
			<tstamp />
			<!-- Create the build directory structure used by compile -->

			<javac srcdir="${src.uiautomatorapi.dir}" destdir="${ant.uiautomatorapi.build.dir}" debug="true" debuglevel="lines,vars,source" includeantruntime="false">
				<classpath refid="build.classpath" />
			</javac>

			<jar jarfile="${ant.uiautomatorapi.temp.jar.file}" basedir="${ant.uiautomatorapi.build.dir}" />
			<copy file="${ant.uiautomatorapi.temp.jar.file}" tofile="${ant.uiautomatorapi.obf.jar.file}" />
		</target>

		<target name="uiautomatorapi_final" depends="uiautomatorapi_build">

			<copy file="${ant.uiautomatorapi.obf.jar.file}" tofile="${private.uiautomatorapi.dist.nonzipped.jar.file}" />

			<copy file="${ant.uiautomatorapi.obf.jar.file}" tofile="${current.dist.private.jars.dir}/${uiautomatorapi.jar.file.name}" />
		</target>
		<!-- ===================================== AC-uiautomator =================================================== -->

		<target name="uiautomator_build" depends="uiautomatorapi_final">
			<!-- Create the time stamp -->
			<tstamp />
			<!-- Create the build directory structure used by compile -->

			<javac srcdir="${src.uiautomator.dir}" destdir="${ant.uiautomator.build.dir}" debug="true" debuglevel="lines,vars,source" includeantruntime="false">
				<classpath refid="build.classpath" />
			</javac>

			<jar jarfile="${ant.uiautomator.temp.jar.file}" basedir="${ant.uiautomator.build.dir}" />

		</target>

		<target name="uiautomator_obfuscate" depends="uiautomator_build">
			<proguard allowaccessmodification="true" usemixedcaseclassnames="false" defaultpackage="" ignorewarnings="true" shrink="false" keepparameternames="true" skipnonpubliclibraryclasses="false" printseeds="obfuscateseeds.txt" printusage="obfuscateusage.txt" printmapping="obfuscatemapping.txt" repackageclasses="com.autocognite.uiautomator.pvt">

				<!-- specify which jar files should be obfuscated -->
				<injar name="${ant.uiautomator.temp.jar.file}" />

				<!-- java libraries my java application depends on -->
				<libraryjar name="/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/rt.jar" />
				<!-- rt.jar on other platforms -->
				<libraryjar name="${3rd_party_jars}/commons-cli-1.3.jar" />
				<libraryjar name="${3rd_party_jars}/commons-io-2.4.jar" />
				<libraryjar name="${3rd_party_jars}/commons-lang3-3.4.jar" />
				<!-- crypto stuff -->
				<libraryjar name="${3rd_party_jars}/commons-validator-1.5.0.jar" />
				<libraryjar name="${3rd_party_jars}/ini4j-0.5.4.jar" />
				<libraryjar name="${3rd_party_jars}/jna-4.2.2.jar" />
				<libraryjar name="${3rd_party_jars}/jna-platform-4.2.2.jar" />
				<libraryjar name="${3rd_party_jars}/log4j-1.2.17.jar" />
				<libraryjar name="${3rd_party_jars}/poi-3.12-20150511.jar" />

				<libraryjar name="${current.dist.private.jars.dir}/${batteries.jar.file.name}" />
				<libraryjar name="${current.dist.private.jars.dir}/${configurator.jar.file.name}" />
				<libraryjar name="${current.dist.private.jars.dir}/${uiautomatorapi.jar.file.name}" />

				<!-- the output jar file that should be created with the obfuscated java 
		class files -->
				<outjar name="${ant.uiautomator.obf.jar.file}" />
				<keeppackagename name="com.autocognite.uiautomator.lib.**" />
				<!-- don't obfuscate this method -->

				<keepattribute name="*Annotation*" />

				<keep name="com.autocognite.uiautomator.pvt.lib.**" allowobfuscation="true">
				</keep>

				<keep name="com.autocognite.uiautomator.UiAutomator" access="public">
					<method access="public" name="*" />
					<method access="protected" name="*" />
					<field name="*" access="public" />
					<field name="info" access="public" />
					<field name="problem" access="public" />
				</keep>

				<keep name="com.autocognite.uiautomator.UiAutomator$info">
					<field name="*" access="public" />
				</keep>
				<keep name="com.autocognite.uiautomator.UiAutomator$problem">
					<field name="*" access="public" />
				</keep>
				<keep name="com.autocognite.uiautomator.lib.**" access="public">
					<method access="public" name="*" />
					<method access="protected" name="*" />
					<field name="uiMap" />
					<field name="runConfig" />
				</keep>

				<keepclassmembers name="com.autocognite.uiautomator.pvt.lib.config.UiAutomatorSingleton" allowobfuscation="true">
					<field name="INSTANCE" />
					<method access="public static" type="**[]" name="values" parameters="" />
					<method access="public static" type="**" name="valueOf" parameters="java.lang.String" />
				</keepclassmembers>
				<keepattribute name="LineNumberTable" />
				<keepattribute name="SourceFile" />
				<keepattribute name="Exceptions" />
				<keepattribute name="Signature" />
				<keepattribute name="InnerClasses" />
			</proguard>
		</target>

		<target name="uiautomator_final" depends="uiautomator_obfuscate">

			<copy file="${ant.uiautomator.obf.jar.file}" tofile="${private.uiautomator.dist.nonzipped.jar.file}" />

			<copy file="${ant.uiautomator.obf.jar.file}" tofile="${current.dist.private.jars.dir}/${uiautomator.jar.file.name}" />
		</target>

		<!-- ===================================== AC-uiautomatorlibext =================================================== -->

		<target name="uiautomatorlibext_build" depends="uiautomator_final">
			<!-- Create the time stamp -->
			<tstamp />
			<!-- Create the build directory structure used by compile -->

			<javac srcdir="${src.uiautomatorlibext.dir}" destdir="${ant.uiautomatorlibext.build.dir}" debug="true" debuglevel="lines,vars,source" includeantruntime="false">
				<classpath refid="build.classpath" />
			</javac>

			<jar jarfile="${ant.uiautomatorlibext.temp.jar.file}" basedir="${ant.uiautomatorlibext.build.dir}" />
			<copy file="${ant.uiautomatorlibext.temp.jar.file}" tofile="${ant.uiautomatorlibext.obf.jar.file}" />

		</target>

		<target name="uiautomatorlibext_final" depends="uiautomatorlibext_build">

			<copy file="${ant.uiautomatorlibext.obf.jar.file}" tofile="${private.uiautomatorlibext.dist.nonzipped.jar.file}" />

			<copy file="${ant.uiautomatorlibext.obf.jar.file}" tofile="${current.dist.private.jars.dir}/${uiautomatorlibext.jar.file.name}" />
		</target>

		<!-- ===================================== AC-appiumapi =================================================== -->

		<target name="appiumapi_build" depends="uiautomatorlibext_final">
			<!-- Create the time stamp -->
			<tstamp />
			<!-- Create the build directory structure used by compile -->

			<javac srcdir="${src.appiumapi.dir}" destdir="${ant.appiumapi.build.dir}" debug="true" debuglevel="lines,vars,source" includeantruntime="false">
				<classpath refid="build.classpath" />
			</javac>

			<jar jarfile="${ant.appiumapi.temp.jar.file}" basedir="${ant.appiumapi.build.dir}" />
			<copy file="${ant.appiumapi.temp.jar.file}" tofile="${ant.appiumapi.obf.jar.file}" />
		</target>

		<target name="appiumapi_final" depends="appiumapi_build">

			<copy file="${ant.appiumapi.obf.jar.file}" tofile="${private.appiumapi.dist.nonzipped.jar.file}" />

			<copy file="${ant.appiumapi.obf.jar.file}" tofile="${current.dist.private.jars.dir}/${appiumapi.jar.file.name}" />
		</target>

		<!-- ===================================== AC-appium =================================================== -->

		<target name="appium_build" depends="appiumapi_final">
			<!-- Create the time stamp -->
			<tstamp />
			<!-- Create the build directory structure used by compile -->

			<javac srcdir="${src.appium.dir}" destdir="${ant.appium.build.dir}" debug="true" debuglevel="lines,vars,source" includeantruntime="false">
				<classpath refid="build.classpath" />
			</javac>

			<jar jarfile="${ant.appium.temp.jar.file}" basedir="${ant.appium.build.dir}" />

		</target>

		<target name="appium_obfuscate" depends="appium_build">
			<proguard allowaccessmodification="true" usemixedcaseclassnames="false" defaultpackage="" ignorewarnings="true" shrink="false" keepparameternames="true" skipnonpubliclibraryclasses="false" printseeds="obfuscateseeds.txt" printusage="obfuscateusage.txt" printmapping="obfuscatemapping.txt" repackageclasses="com.autocognite.appium.pvt">

				<!-- specify which jar files should be obfuscated -->
				<injar name="${ant.appium.temp.jar.file}" />

				<!-- java libraries my java application depends on -->
				<libraryjar name="/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/rt.jar" />
				<!-- rt.jar on other platforms -->
				<libraryjar name="${3rd_party_jars}/commons-cli-1.3.jar" />
				<libraryjar name="${3rd_party_jars}/commons-io-2.4.jar" />
				<libraryjar name="${3rd_party_jars}/commons-lang3-3.4.jar" />
				<!-- crypto stuff -->
				<libraryjar name="${3rd_party_jars}/commons-validator-1.5.0.jar" />
				<libraryjar name="${3rd_party_jars}/ini4j-0.5.4.jar" />
				<libraryjar name="${3rd_party_jars}/jna-4.2.2.jar" />
				<libraryjar name="${3rd_party_jars}/jna-platform-4.2.2.jar" />
				<libraryjar name="${3rd_party_jars}/log4j-1.2.17.jar" />
				<libraryjar name="${3rd_party_jars}/poi-3.12-20150511.jar" />
				<libraryjar name="${3rd_party_jars}/selenium-server-standalone-2.53.0.jar" />
				<libraryjar name="${3rd_party_jars}/java-client-3.2.0.jar" />

				<libraryjar name="${current.dist.private.jars.dir}/${batteries.jar.file.name}" />
				<libraryjar name="${current.dist.private.jars.dir}/${configurator.jar.file.name}" />
				<libraryjar name="${current.dist.private.jars.dir}/${databroker.jar.file.name}" />
				<libraryjar name="${current.dist.private.jars.dir}/${testcommons.jar.file.name}" />
				<libraryjar name="${current.dist.private.jars.dir}/${uiautomatorapi.jar.file.name}" />
				<libraryjar name="${current.dist.private.jars.dir}/${uiautomator.jar.file.name}" />
				<libraryjar name="${current.dist.private.jars.dir}/${uiautomatorlibext.jar.file.name}" />
				<libraryjar name="${current.dist.private.jars.dir}/${appiumapi.jar.file.name}" />

				<!-- the output jar file that should be created with the obfuscated java 
		class files -->
				<outjar name="${ant.appium.obf.jar.file}" />
				<keeppackagename name="com.autocognite.appium.lib.**" />
				<!-- don't obfuscate this method -->

				<keepattribute name="*Annotation*" />

				<keep name="com.autocognite.appium.pvt.lib.**" allowobfuscation="true">
				</keep>

				<keep name="com.autocognite.appium.AppiumAutomator" access="public">
					<method access="public" name="*" />
					<method access="protected" name="*" />
					<field name="*" access="public" />
				</keep>

				<keep name="com.autocognite.appium.lib.**" access="public">
					<method access="public" name="*" />
					<method access="protected" name="*" />
					<field name="driver" />
				</keep>

				<keepclassmembers name="com.autocognite.appium.pvt.lib.config.AppiumAutomatorSingleton" allowobfuscation="true">
					<field name="INSTANCE" />
					<method access="public static" type="**[]" name="values" parameters="" />
					<method access="public static" type="**" name="valueOf" parameters="java.lang.String" />
				</keepclassmembers>
				<keepattribute name="LineNumberTable" />
				<keepattribute name="SourceFile" />
				<keepattribute name="Exceptions" />
				<keepattribute name="Signature" />
				<keepattribute name="InnerClasses" />
			</proguard>
		</target>

		<target name="appium_final" depends="appium_obfuscate">

			<copy file="${ant.appium.obf.jar.file}" tofile="${private.appium.dist.nonzipped.jar.file}" />

			<copy file="${ant.appium.obf.jar.file}" tofile="${current.dist.private.jars.dir}/${appium.jar.file.name}" />
		</target>

		<!-- ===================================== AC-appiumlibext =================================================== -->

		<target name="appiumlibext_build" depends="appium_final">
			<!-- Create the time stamp -->
			<tstamp />
			<!-- Create the build directory structure used by compile -->

			<javac srcdir="${src.appiumlibext.dir}" destdir="${ant.appiumlibext.build.dir}" debug="true" debuglevel="lines,vars,source" includeantruntime="false">
				<classpath refid="build.classpath" />
			</javac>

			<jar jarfile="${ant.appiumlibext.temp.jar.file}" basedir="${ant.appiumlibext.build.dir}" />
			<copy file="${ant.appiumlibext.temp.jar.file}" tofile="${ant.appiumlibext.obf.jar.file}" />
		</target>

		<target name="appiumlibext_final" depends="appiumlibext_build">

			<copy file="${ant.appiumlibext.obf.jar.file}" tofile="${private.appiumlibext.dist.nonzipped.jar.file}" />

			<copy file="${ant.appiumlibext.obf.jar.file}" tofile="${current.dist.private.jars.dir}/${appiumlibext.jar.file.name}" />
		</target>
		<!-- ===================================== AC-seleniumapi =================================================== -->

		<target name="seleniumapi_build" depends="appiumlibext_final">
			<!-- Create the time stamp -->
			<tstamp />
			<!-- Create the build directory structure used by compile -->

			<javac srcdir="${src.seleniumapi.dir}" destdir="${ant.seleniumapi.build.dir}" debug="true" debuglevel="lines,vars,source" includeantruntime="false">
				<classpath refid="build.classpath" />
			</javac>

			<jar jarfile="${ant.seleniumapi.temp.jar.file}" basedir="${ant.seleniumapi.build.dir}" />
			<copy file="${ant.seleniumapi.temp.jar.file}" tofile="${ant.seleniumapi.obf.jar.file}" />
		</target>

		<target name="seleniumapi_final" depends="seleniumapi_build">

			<copy file="${ant.seleniumapi.obf.jar.file}" tofile="${private.seleniumapi.dist.nonzipped.jar.file}" />

			<copy file="${ant.seleniumapi.obf.jar.file}" tofile="${current.dist.private.jars.dir}/${seleniumapi.jar.file.name}" />
		</target>

		<!-- ===================================== AC-selenium =================================================== -->

		<target name="selenium_build" depends="seleniumapi_final">
			<!-- Create the time stamp -->
			<tstamp />
			<!-- Create the build directory structure used by compile -->

			<javac srcdir="${src.selenium.dir}" destdir="${ant.selenium.build.dir}" debug="true" debuglevel="lines,vars,source" includeantruntime="false">
				<classpath refid="build.classpath" />
			</javac>

			<jar jarfile="${ant.selenium.temp.jar.file}" basedir="${ant.selenium.build.dir}" />

		</target>

		<target name="selenium_obfuscate" depends="selenium_build">
			<proguard allowaccessmodification="true" usemixedcaseclassnames="false" defaultpackage="" ignorewarnings="true" shrink="false" keepparameternames="true" skipnonpubliclibraryclasses="false" printseeds="obfuscateseeds.txt" printusage="obfuscateusage.txt" printmapping="obfuscatemapping.txt" repackageclasses="com.autocognite.selenium.pvt">

				<!-- specify which jar files should be obfuscated -->
				<injar name="${ant.selenium.temp.jar.file}" />

				<!-- java libraries my java application depends on -->
				<libraryjar name="/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/rt.jar" />
				<!-- rt.jar on other platforms -->
				<libraryjar name="${3rd_party_jars}/commons-cli-1.3.jar" />
				<libraryjar name="${3rd_party_jars}/commons-io-2.4.jar" />
				<libraryjar name="${3rd_party_jars}/commons-lang3-3.4.jar" />
				<!-- crypto stuff -->
				<libraryjar name="${3rd_party_jars}/commons-validator-1.5.0.jar" />
				<libraryjar name="${3rd_party_jars}/ini4j-0.5.4.jar" />
				<libraryjar name="${3rd_party_jars}/jna-4.2.2.jar" />
				<libraryjar name="${3rd_party_jars}/jna-platform-4.2.2.jar" />
				<libraryjar name="${3rd_party_jars}/log4j-1.2.17.jar" />
				<libraryjar name="${3rd_party_jars}/poi-3.12-20150511.jar" />
				<libraryjar name="${3rd_party_jars}/selenium-server-standalone-2.53.0.jar" />

				<libraryjar name="${current.dist.private.jars.dir}/${batteries.jar.file.name}" />
				<libraryjar name="${current.dist.private.jars.dir}/${configurator.jar.file.name}" />
				<libraryjar name="${current.dist.private.jars.dir}/${databroker.jar.file.name}" />
				<libraryjar name="${current.dist.private.jars.dir}/${uiautomatorapi.jar.file.name}" />
				<libraryjar name="${current.dist.private.jars.dir}/${uiautomator.jar.file.name}" />
				<libraryjar name="${current.dist.private.jars.dir}/${uiautomatorlibext.jar.file.name}" />
				<libraryjar name="${current.dist.private.jars.dir}/${seleniumapi.jar.file.name}" />

				<!-- the output jar file that should be created with the obfuscated java 
		class files -->
				<outjar name="${ant.selenium.obf.jar.file}" />
				<keeppackagename name="com.autocognite.selenium.lib.**" />
				<!-- don't obfuscate this method -->

				<keepattribute name="*Annotation*" />

				<keep name="com.autocognite.selenium.pvt.lib.**" allowobfuscation="true">
				</keep>

				<keep name="com.autocognite.selenium.seleniumAutomator" access="public">
					<method access="public" name="*" />
					<method access="protected" name="*" />
					<field name="*" access="public" />
				</keep>

				<keep name="com.autocognite.selenium.lib.**" access="public">
					<method access="public" name="*" />
					<method access="protected" name="*" />
					<field name="driver" />
				</keep>

				<keepattribute name="LineNumberTable" />
				<keepattribute name="SourceFile" />
				<keepattribute name="Exceptions" />
				<keepattribute name="Signature" />
				<keepattribute name="InnerClasses" />
			</proguard>
		</target>

		<target name="selenium_final" depends="selenium_obfuscate">

			<copy file="${ant.selenium.obf.jar.file}" tofile="${private.selenium.dist.nonzipped.jar.file}" />

			<copy file="${ant.selenium.obf.jar.file}" tofile="${current.dist.private.jars.dir}/${selenium.jar.file.name}" />
		</target>
		<!-- ===================================== AC-seleniumlibext =================================================== -->

		<target name="seleniumlibext_build" depends="selenium_final">
			<!-- Create the time stamp -->
			<tstamp />
			<!-- Create the build directory structure used by compile -->

			<javac srcdir="${src.seleniumlibext.dir}" destdir="${ant.seleniumlibext.build.dir}" debug="true" debuglevel="lines,vars,source" includeantruntime="false">
				<classpath refid="build.classpath" />
			</javac>

			<jar jarfile="${ant.seleniumlibext.temp.jar.file}" basedir="${ant.seleniumlibext.build.dir}" />
			<copy file="${ant.seleniumlibext.temp.jar.file}" tofile="${ant.seleniumlibext.obf.jar.file}" />
		</target>

		<target name="seleniumlibext_final" depends="seleniumlibext_build">

			<copy file="${ant.seleniumlibext.obf.jar.file}" tofile="${private.seleniumlibext.dist.nonzipped.jar.file}" />

			<copy file="${ant.seleniumlibext.obf.jar.file}" tofile="${current.dist.private.jars.dir}/${seleniumlibext.jar.file.name}" />
		</target>
		<!-- ===================================== AC-sikuliapi =================================================== -->

		<target name="sikuliapi_build" depends="seleniumlibext_final">
			<!-- Create the time stamp -->
			<tstamp />
			<!-- Create the build directory structure used by compile -->

			<javac srcdir="${src.sikuliapi.dir}" destdir="${ant.sikuliapi.build.dir}" debug="true" debuglevel="lines,vars,source" includeantruntime="false">
				<classpath refid="build.classpath" />
			</javac>

			<jar jarfile="${ant.sikuliapi.temp.jar.file}" basedir="${ant.sikuliapi.build.dir}" />
			<copy file="${ant.sikuliapi.temp.jar.file}" tofile="${ant.sikuliapi.obf.jar.file}" />
		</target>

		<target name="sikuliapi_final" depends="sikuliapi_build">

			<copy file="${ant.sikuliapi.obf.jar.file}" tofile="${private.sikuliapi.dist.nonzipped.jar.file}" />

			<copy file="${ant.sikuliapi.obf.jar.file}" tofile="${current.dist.private.jars.dir}/${sikuliapi.jar.file.name}" />
		</target>

		<!-- ===================================== AC-sikuli =================================================== -->

		<target name="sikuli_build" depends="sikuliapi_final">
			<!-- Create the time stamp -->
			<tstamp />
			<!-- Create the build directory structure used by compile -->

			<javac srcdir="${src.sikuli.dir}" destdir="${ant.sikuli.build.dir}" debug="true" debuglevel="lines,vars,source" includeantruntime="false">
				<classpath refid="build.classpath" />
			</javac>

			<jar jarfile="${ant.sikuli.temp.jar.file}" basedir="${ant.sikuli.build.dir}" />

		</target>

		<target name="sikuli_obfuscate" depends="sikuli_build">
			<proguard allowaccessmodification="true" usemixedcaseclassnames="false" defaultpackage="" ignorewarnings="true" shrink="false" keepparameternames="true" skipnonpubliclibraryclasses="false" printseeds="obfuscateseeds.txt" printusage="obfuscateusage.txt" printmapping="obfuscatemapping.txt" repackageclasses="com.autocognite.sikuli.pvt">

				<!-- specify which jar files should be obfuscated -->
				<injar name="${ant.sikuli.temp.jar.file}" />

				<!-- java libraries my java application depends on -->
				<libraryjar
	name="/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/rt.jar" />
				<!-- rt.jar on other platforms -->
				<libraryjar name="${3rd_party_jars}/commons-cli-1.3.jar" />
				<libraryjar name="${3rd_party_jars}/commons-io-2.4.jar" />
				<libraryjar name="${3rd_party_jars}/commons-lang3-3.4.jar" />
				<!-- crypto stuff -->
				<libraryjar name="${3rd_party_jars}/commons-validator-1.5.0.jar" />
				<libraryjar name="${3rd_party_jars}/ini4j-0.5.4.jar" />
				<libraryjar name="${3rd_party_jars}/jna-4.2.2.jar" />
				<libraryjar name="${3rd_party_jars}/jna-platform-4.2.2.jar" />
				<libraryjar name="${3rd_party_jars}/log4j-1.2.17.jar" />
				<libraryjar name="${3rd_party_jars}/poi-3.12-20150511.jar" />
				<libraryjar name="${3rd_party_jars}/sikuli-script.jar" />

				<libraryjar name="${current.dist.private.jars.dir}/${batteries.jar.file.name}" />
				<libraryjar name="${current.dist.private.jars.dir}/${configurator.jar.file.name}" />
				<libraryjar name="${current.dist.private.jars.dir}/${databroker.jar.file.name}" />
				<libraryjar name="${current.dist.private.jars.dir}/${testcommons.jar.file.name}" />

				<libraryjar name="${current.dist.private.jars.dir}/${uiautomatorapi.jar.file.name}" />
				<libraryjar name="${current.dist.private.jars.dir}/${uiautomator.jar.file.name}" />
				<libraryjar name="${current.dist.private.jars.dir}/${uiautomatorlibext.jar.file.name}" />
				<libraryjar name="${current.dist.private.jars.dir}/${sikuliapi.jar.file.name}" />

				<!-- the output jar file that should be created with the obfuscated java 
		class files -->
				<outjar name="${ant.sikuli.obf.jar.file}" />
				<keeppackagename name="com.autocognite.sikuli.lib.**" />
				<!-- don't obfuscate this method -->

				<keepattribute name="*Annotation*" />

				<keep name="com.autocognite.sikuli.pvt.lib.**" allowobfuscation="true">
				</keep>

				<keep name="com.autocognite.sikuli.SikuliAutomator" access="public">
					<method access="public" name="*" />
					<method access="protected" name="*" />
					<field name="*" access="public"/>
				</keep>

				<keep name="com.autocognite.sikuli.lib.**" access="public">
					<method access="public" name="*" />
					<method access="protected" name="*" />
					<field name="driver"/>
				</keep>

				<keepattribute name="LineNumberTable" />
				<keepattribute name="SourceFile" />
				<keepattribute name="Exceptions" />
				<keepattribute name="Signature" />
				<keepattribute name="InnerClasses" />
			</proguard>
		</target>

		<target name="sikuli_final" depends="sikuli_obfuscate">

			<copy file="${ant.sikuli.obf.jar.file}"
		tofile="${private.sikuli.dist.nonzipped.jar.file}" />

			<copy file="${ant.sikuli.obf.jar.file}"
		tofile="${current.dist.private.jars.dir}/${sikuli.jar.file.name}" />
		</target>

		<!-- ===================================== AC-sikulilibext =================================================== -->

		<target name="sikulilibext_build" depends="sikuli_final">
			<!-- Create the time stamp -->
			<tstamp />
			<!-- Create the build directory structure used by compile -->

			<javac srcdir="${src.sikulilibext.dir}" destdir="${ant.sikulilibext.build.dir}" debug="true"
	debuglevel="lines,vars,source" includeantruntime="false">
				<classpath refid="build.classpath" />
			</javac>

			<jar jarfile="${ant.sikulilibext.temp.jar.file}" basedir="${ant.sikulilibext.build.dir}" />
			<copy file="${ant.sikulilibext.temp.jar.file}"
			tofile="${ant.sikulilibext.obf.jar.file}" />
		</target>

		<target name="sikulilibext_final" depends="sikulilibext_build">

			<copy file="${ant.sikulilibext.obf.jar.file}"
		tofile="${private.sikulilibext.dist.nonzipped.jar.file}" />

			<copy file="${ant.sikulilibext.obf.jar.file}"
		tofile="${current.dist.private.jars.dir}/${sikulilibext.jar.file.name}" />
		</target>

	</project>