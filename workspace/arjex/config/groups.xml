<groups>
    <!-- Selects ex01_module from my_universe package -->
    <group name="gp1">
        <pickers>
            <picker type="cm" pattern=".*_picking"/>
        </pickers>
    </group>

    <!-- Selects test1_picking and test2_picking from my_universe package -->
    <group name="gp2">
        <pickers>
            <picker type="cf" pattern=".*_picking"/>
        </pickers>
    </group>

    <!-- Selects test_picking from ex0_picking module from my_universe package -->
    <group name="gp3">
        <pickers>
            <picker type="cm" pattern=".*ex01_picking"/>
            <picker type="cf" pattern="test1_picking"/>
        </pickers>
    </group>

    <!-- Run-time selection using a single inclusion rule based on pre-defined property -->
    <group name="gp4">
        <pickers>
            <picker type="cm" pattern=".*picking"/>
        </pickers>

        <rules>
            <rule type="inclusion" target="props" object="author" condition="equal" expression="Rahul"/>
        </rules>
    </group>

    <!-- Run-time selection using a single exclusion rule based on pre-defined property -->
    <group name="gp5">
        <pickers>
            <picker type="cm" pattern=".*picking"/>
        </pickers>

        <rules>
            <rule type="exclusion" target="props" object="author" condition="equal" expression="Rahul"/>
        </rules>
    </group>

    <!-- Run-time selection using a combination of inclusion and exclusion rules
    for built-in and user defined prop with different types -->
    <group name="gp6">
        <pickers>
            <picker type="cm" pattern=".*picking"/>
        </pickers>

        <rules>
            <rule type="inclusion" target="props" object="author" condition="equal" expression="Rahul"/>
            <rule type="exclusion" target="props" object="my_prop" object_type="int" condition="equal" expression="456"/>
        </rules>
    </group>

    <!-- Other condition types -->
    <group name="gp7">
        <pickers>
            <picker type="cm" pattern=".*ex03_picking"/>
        </pickers>
        <rules>
            <rule type="inclusion" target="props" object="author" condition="not equal" expression="Rahul"/>
            <rule type="inclusion" target="props" object="true_prop" object_type="bool" condition="true"/>
            <rule type="inclusion" target="props" object="false_prop" object_type="bool" condition="false"/>
            <rule type="inclusion" target="props" object="none_prop" object_type="none" condition="none"/>
            <rule type="inclusion" target="props" object="not_none_prop" object_type="none" condition="not none"/>
            <rule type="inclusion" target="props" object="match_prop" condition="match" expression="match.*"/>
            <rule type="inclusion" target="props" object="partial_match_prop" condition="partial match" expression="match"/>
        </rules>
    </group>

    <group name="gpc1">
        <evars>
            <evar name="gconfevar" value="4" type="int"/>
        </evars>
        
        <fixtures>
            <fixture type="init_group" module="all" func="init_gp1"/>
            <fixture type="end_group" module="all" func="end_gp1"/>
            <fixture type="init_each_module" module="all" func="init_each_module"/>
            <fixture type="end_each_module" module="all" func="end_each_module"/>
        </fixtures>

        <pickers>
            <picker type="cm" pattern=".*gp1"/>
            <picker type="cf" pattern=".*func2"/>
        </pickers>
    </group>

    <group name="gpc2">
        <evars>
            <evar name="gconfevar" value="5" type="int"/>
        </evars>

        <pickers>
            <picker type="cm" pattern=".*gp2"/>
            <picker type="cf" pattern=".*func1"/>
        </pickers>
    </group>
</groups>